<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三国小梦的博客</title>
  
  
  <link href="https://www.lxy.zone/atom.xml" rel="self"/>
  
  <link href="https://www.lxy.zone/"/>
  <updated>2022-03-14T13:39:20.637Z</updated>
  <id>https://www.lxy.zone/</id>
  
  <author>
    <name>三国小梦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实现各种进制转换(c++版)</title>
    <link href="https://www.lxy.zone/2022/03/14/122_%E5%AE%9E%E7%8E%B0%E5%90%84%E7%A7%8D%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2(c++%E7%89%88)/"/>
    <id>https://www.lxy.zone/2022/03/14/122_%E5%AE%9E%E7%8E%B0%E5%90%84%E7%A7%8D%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2(c++%E7%89%88)/</id>
    <published>2022-03-14T11:55:05.000Z</published>
    <updated>2022-03-14T13:39:20.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我们最常见的进制转换就是十进制转换为二进制了，就是不停的作除法，取余数。</p><p>例如：十进制的10转换为二进制</p><p>10÷2=5···0</p><p>5÷2=2···1</p><p>2÷2=1···0</p><p>1÷2=0···1</p><p>直到商为0，然后把余数倒着写，所以10的二进制表示为1010。</p><h1 id="十进制-gt-N进制"><a href="#十进制-gt-N进制" class="headerlink" title="十进制-&gt;N进制"></a>十进制-&gt;N进制</h1><p>会了十进制转换为二进制，那么十进制转换为任意进制也就迎刃而解了，只要不停的除法和取余就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 进制转换 10——&gt;n（n&lt;10）</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ConvertT2N</span><span class="params">(<span class="keyword">int</span> number,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    stack&lt;<span class="keyword">char</span>&gt; s;</span><br><span class="line">    <span class="keyword">if</span> (number == <span class="number">0</span>) &#123;  <span class="comment">//特殊情况，当输入是0时，输出也是0，否则输入0时就卡那了</span></span><br><span class="line">        s.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (number) &#123;</span><br><span class="line">            s.<span class="built_in">push</span>(number % n);</span><br><span class="line">            number /= n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 把栈中的余数输出</span></span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s.<span class="built_in">top</span>());</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number) != EOF) &#123;</span><br><span class="line">        <span class="built_in">ConvertT2N</span>(number, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是上面的代码是有一点小问题的，它只能转换10以内的进制，也就是N必须小于10，否则就会出错。例如十进制转换成十六进制就会出错。例如11转换成十六进制表示为b而不是11，因为当表示十进制以上的数时需要用到字母a,b,c,d等等。</p><p>所以需要在输出的余数上面加加工一下，把大于10的数用字母表示。</p><p>改进版代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把整数转换成对应进制的字符，例如10的十六进制中表示为A</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Int2Char</span><span class="params">(<span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> target - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 现在N可以取任意进制了</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ConvertT2N</span><span class="params">(<span class="keyword">int</span> number,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    stack&lt;<span class="keyword">char</span>&gt; s;<span class="comment">//因为要存字母所以用char</span></span><br><span class="line">    <span class="keyword">if</span> (number == <span class="number">0</span>) &#123;  <span class="comment">//特殊情况，当输入是0时，输出也是0，否则输入0时就卡那了</span></span><br><span class="line">        s.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (number) &#123;</span><br><span class="line">            s.<span class="built_in">push</span>(<span class="built_in">Int2Char</span>(number % n));<span class="comment">//在余数入栈时加工一下,把int转换成char</span></span><br><span class="line">            number /= n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 把栈中的余数输出</span></span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s.<span class="built_in">top</span>());</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number) != EOF) &#123;</span><br><span class="line">        <span class="built_in">ConvertT2N</span>(number, <span class="number">16</span>);<span class="comment">//把十进制转换为十六进制</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="N进制转换成十进制"><a href="#N进制转换成十进制" class="headerlink" title="N进制转换成十进制"></a>N进制转换成十进制</h1><p>会了十进制转换为N进制，那么把N进制转换为十进制倒着来就好了，不停的乘N，加上余数。</p><p>例如：二进制的1010转换为十进制</p><p>0*2+1=1</p><p>1*2+0=2</p><p>2*2+1=5</p><p>5*2+0=10</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 进制转换 N-&gt;10</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="comment">// 先把字母转换成数字</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Char2Int</span><span class="params">(<span class="keyword">char</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; target &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> target - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ConverM2T</span><span class="params">(string str,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number = <span class="number">0</span>; <span class="comment">//该数在10进制下的表示</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        number *= m;</span><br><span class="line">        number += <span class="built_in">Char2Int</span>(str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; str) &#123;</span><br><span class="line">        <span class="built_in">ConverM2T</span>(str,<span class="number">16</span>);<span class="comment">//把十六进制转换为十进制</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="M进制转换为N进制"><a href="#M进制转换为N进制" class="headerlink" title="M进制转换为N进制"></a>M进制转换为N进制</h1><p>上述前两个都会了以后，实现把M进制转换成N进制了，思路是先把M进制转换成十进制，然后再把十进制的数转换成N进制。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * M进制转换成N进制</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Char2Int</span><span class="params">(<span class="keyword">char</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; target &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> target - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// M进制转换成十进制的数返回</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ConverM2T</span><span class="params">(string str,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number = <span class="number">0</span>; <span class="comment">//该数在10进制下的表示</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        number *= m;</span><br><span class="line">        number += <span class="built_in">Char2Int</span>(str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Int2Char</span><span class="params">(<span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> target - <span class="number">10</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//十进制转换成N进制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ConvertT2N</span><span class="params">(<span class="keyword">int</span> number,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    stack&lt;<span class="keyword">char</span>&gt; s;</span><br><span class="line">    <span class="keyword">while</span> (number) &#123;</span><br><span class="line">        s.<span class="built_in">push</span>(<span class="built_in">Int2Char</span>(number % n));</span><br><span class="line">        number /= n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s.<span class="built_in">empty</span>()) &#123;    <span class="comment">//当输入是0时，输出也是0</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s.<span class="built_in">top</span>());</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n)!=EOF)&#123;</span><br><span class="line">        string str;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        <span class="keyword">int</span> number = <span class="built_in">ConverM2T</span>(str, m);<span class="comment">// M进制转换成十进制的数返回</span></span><br><span class="line">        <span class="comment">// 再把该数转换成N进制</span></span><br><span class="line">        <span class="built_in">ConvertT2N</span>(number, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我们最常见的进制转换就是十进制转换为二进制了，就是不停的作除法，取余数。&lt;/p&gt;
&lt;p&gt;例如：十进制的10转换为二进制&lt;/p&gt;
&lt;p&gt;10÷</summary>
      
    
    
    
    
    <category term="算法笔记" scheme="https://www.lxy.zone/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>node版本冲突怎么办？快使用nvm-windows</title>
    <link href="https://www.lxy.zone/2022/01/19/121_node%E7%89%88%E6%9C%AC%E5%86%B2%E7%AA%81%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F%E5%BF%AB%E4%BD%BF%E7%94%A8nvm-windows/"/>
    <id>https://www.lxy.zone/2022/01/19/121_node%E7%89%88%E6%9C%AC%E5%86%B2%E7%AA%81%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F%E5%BF%AB%E4%BD%BF%E7%94%A8nvm-windows/</id>
    <published>2022-01-19T09:21:38.000Z</published>
    <updated>2022-01-20T07:44:58.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一般来说安装软件都喜欢安装最新版本的，我当然也不例外，电脑上已经有了最新版本的node了，最近看了个vue项目，由于使用版本可能比较老，在使用<code>npm install</code> 时死活不行，后来百度一下才知道时node版本太高了，需要换个低版本的，为了一个旧项目也不值得来回安装卸载node了，就在想有没有一个关于node版本管理的软件呢，后来在一番搜索下找到了一款神器<code>nvm</code></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><a href="https://github.com/creationix/nvm">nvm</a>是 Mac 下的 node 管理工具，如果需要管理 Windows 下的 node，官方推荐使用 <a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a>。不过，nvm-windows 并不是 nvm 的简单移植，他们也没有任何关系，但它们的命令基本是一样的。题主电脑是windows系统 ，就只好简单演示 <strong>nvm-windows</strong>的使用了。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>截止到现在nvm-windows的最新版本是1.1.9，点击<a href="https://github.com/coreybutler/nvm-windows/releases">下载</a>，即可。<strong>需要注意的是安装nvm-windows之前需要卸载之前的node</strong>，把之前相关文件夹都删干净了就可以无脑安装了。如果在<code>cmd</code>中输入<code>nvm</code>出现如下所示则说明安装成功了。</p><p><img src="https://pic.imgdb.cn/item/61e90ef92ab3f51d913ac529.jpg"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p><strong>安装node</strong></p><p> <code>nvm install &lt;version&gt;</code>：安装一个指定版本的node，直接指定版本号即可。</p><p> <code>nvm install latest </code>：安装最新本版。</p><p><strong>使用node</strong></p><p><code>nvm use &lt;version&gt; </code> ：使用指定版本node</p><p><code>nvm use latest </code> ：使用最新版本node</p><p><strong>查看node</strong></p><p><code>nvm list</code>：查看所有的node版本</p><p><code>nvm current</code>：查看当前正在使用的node版本</p><p><strong>卸载node</strong></p><p><code>nvm uninstall &lt;version&gt;</code>：卸载指定版本的node</p><p><strong>设置镜像</strong></p><p><code>nvm node_mirror &lt;node_mirror_url&gt;</code>: 设置node镜像</p><p><code>nvm npm_mirror &lt;npm_mirror_url&gt;</code>: 设置npm镜像</p><p>（默认镜像就下载的挺快的，我就没设置）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;一般来说安装软件都喜欢安装最新版本的，我当然也不例外，电脑上已经有了最新版本的node了，最近看了个vue项目，由于使用版本可能比较老，在使</summary>
      
    
    
    
    
    <category term="node" scheme="https://www.lxy.zone/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>一文读懂Hibernate Validator 数据校验框架</title>
    <link href="https://www.lxy.zone/2021/01/22/120_%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82Hibernate%20Validator%20%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E6%A1%86%E6%9E%B6-%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82hibernatevalidator%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E6%A1%86%E6%9E%B6/"/>
    <id>https://www.lxy.zone/2021/01/22/120_%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82Hibernate%20Validator%20%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E6%A1%86%E6%9E%B6-%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82hibernatevalidator%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E6%A1%86%E6%9E%B6/</id>
    <published>2021-01-22T07:55:51.000Z</published>
    <updated>2022-01-21T03:58:11.080Z</updated>
    
    <content type="html"><![CDATA[<p>数据校验是一项常见的任务，在没有引入框架之前，我们通常的做法都是一堆的<code>if</code> 、 <code>else</code>等等，在代码中非常不美观，只用Hibernate Validator可以简化代码。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="javaSE版本"><a href="#javaSE版本" class="headerlink" title="javaSE版本"></a>javaSE版本</h2><h3 id="1-引入pom-xml文件"><a href="#1-引入pom-xml文件" class="headerlink" title="1.引入pom.xml文件"></a>1.引入pom.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--hibernate-validator--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.6.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--hibernate-validator el表达式依赖，版本必须对应否则会报错--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.el<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--hutool工具包，本案例中提供aop代理工具--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-编写ValidatorUtil工具类"><a href="#2-编写ValidatorUtil工具类" class="headerlink" title="2.编写ValidatorUtil工具类"></a>2.编写ValidatorUtil工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidationUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Validator validator;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Validator faliFastValidator;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ExecutableValidator executableValidator;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        validator = Validation.buildDefaultValidatorFactory().getValidator();</span><br><span class="line">        <span class="comment">// 快速失败</span></span><br><span class="line">        faliFastValidator = Validation.byProvider(HibernateValidator.class).configure().failFast(<span class="keyword">true</span>).buildValidatorFactory().getValidator();</span><br><span class="line">        <span class="comment">// 验证非bean入参</span></span><br><span class="line">        executableValidator = validator.forExecutables();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法约束校验</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">validateParameters</span><span class="params">(Object var1, Method var2, Object[] var3, Class&lt;?&gt;... var4)</span> </span>&#123;</span><br><span class="line">        Set&lt;ConstraintViolation&lt;Object&gt;&gt; constraintViolations = executableValidator.validateParameters(var1, var2, var3, var4);</span><br><span class="line">        constraintViolations.forEach(i -&gt; &#123;</span><br><span class="line"><span class="comment">// 常见是使用异常来传递错误信息</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(i.getMessage());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// bean约束校验</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">valid</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        Set&lt;ConstraintViolation&lt;Object&gt;&gt; validate = validator.validate(o);</span><br><span class="line">        validate.stream().forEach(v -&gt; &#123;</span><br><span class="line">            System.out.println(v.getMessage());</span><br><span class="line"><span class="comment">//            throw new RuntimeException(v.getMessage());</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 与valid方法的区别，只要有一个不成立就停止循环;valid方法会打印所有不满足的信息</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fastValid</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        Set&lt;ConstraintViolation&lt;Object&gt;&gt; validate = faliFastValidator.validate(o);</span><br><span class="line">        validate.stream().forEach(v -&gt; &#123;</span><br><span class="line">            System.out.println(v.getMessage());</span><br><span class="line"><span class="comment">//            throw new RuntimeException(v.getMessage());</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-声明和验证bean约束"><a href="#3-声明和验证bean约束" class="headerlink" title="3.声明和验证bean约束"></a>3.声明和验证bean约束</h3><p><strong>编写bean类UserInfo.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;姓名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Min(value = 18, message = &quot;未成年人禁止使用&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编写测试类Main.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserInfo userInfo = <span class="keyword">new</span> UserInfo();</span><br><span class="line">        userInfo.setAge(<span class="number">12</span>);</span><br><span class="line">        userInfo.setName(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">// 没有if语句，进行数据校验</span></span><br><span class="line">        ValidationUtil.valid(userInfo);</span><br><span class="line"><span class="comment">//        ValidationUtil.fastValid(userInfo);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行结果：</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//一月 22, 2021 4:37:06 下午 org.hibernate.validator.internal.util.Version &lt;clinit&gt;</span></span><br><span class="line"><span class="comment">//INFO: HV000001: Hibernate Validator 6.1.6.Final</span></span><br><span class="line"><span class="comment">//        姓名不能为空</span></span><br><span class="line"><span class="comment">//        未成年人禁止使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-声明和验证方法约束"><a href="#4-声明和验证方法约束" class="headerlink" title="4.声明和验证方法约束"></a>4.声明和验证方法约束</h3><p><strong>编写service接口和类</strong>(为什么要使用接口呢？因为要使用动态代理)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserInfoService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 校验方法参数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="meta">@NotBlank(message = &quot;用户名不能为空&quot;)</span> String username)</span></span>;</span><br><span class="line">    <span class="comment">// 校验bean约束</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="meta">@Valid</span> UserInfo userInfo)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@Valid</strong> ：注解于参数为bean的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoService</span> <span class="keyword">implements</span> <span class="title">IUserInfoService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;添加成功[&quot;</span>+username+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        System.out.println(userInfo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编写代理类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidatorAspect</span> <span class="keyword">extends</span> <span class="title">SimpleAspect</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 动态代理，在调用被代理的方法前调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">before</span><span class="params">(Object target, Method method, Object[] args)</span> </span>&#123;</span><br><span class="line">        ValidationUtil.validateParameters(target, method, args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编写测试类Main.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">UserInfo userInfo = <span class="keyword">new</span> UserInfo();</span><br><span class="line">        userInfo.setAge(<span class="number">12</span>);</span><br><span class="line">        userInfo.setName(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">// 通过动态代理创建一个对象</span></span><br><span class="line">        IUserInfoService proxy = ProxyUtil.proxy(<span class="keyword">new</span> UserInfoService(), ValidatorAspect.class);</span><br><span class="line">        <span class="comment">// 校验方法约束</span></span><br><span class="line">proxy.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">// 校验bean约束</span></span><br><span class="line">proxy.add(userInfo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>本案例只是对hibernate-validator方法约束的入门使用，在实际使用中都是通过spring aop等工具来完成，spring已经提供的提供了和hibernate-validator的整合，在后面的案例会有</strong></p><h2 id="springMVC版本（纯java配置）"><a href="#springMVC版本（纯java配置）" class="headerlink" title="springMVC版本（纯java配置）"></a>springMVC版本（纯java配置）</h2><h3 id="1-引入jar包"><a href="#1-引入jar包" class="headerlink" title="1.引入jar包"></a>1.引入jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet与jsp--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaee-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springmvc相关--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--hibernate-validator 相关，版本必须和spirngmvc匹配，否则报错--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.6.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.el<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-springmvc相关配置"><a href="#2-springmvc相关配置" class="headerlink" title="2.springmvc相关配置"></a>2.springmvc相关配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebAppInitializer</span> <span class="keyword">extends</span> <span class="title">AbstractAnnotationConfigDispatcherServletInitializer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载springmvc配置类</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Class[]&#123;WebConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String[]&#123;<span class="string">&quot;/&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@ComponentScan(value = &quot;zone.lxy&quot;,includeFilters = @ComponentScan.Filter(classes = &#123;Controller.class&#125;))</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 配置hibernate-validator，默认已经配置</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public Validator getValidator() &#123;</span></span><br><span class="line"><span class="comment">//        LocalValidatorFactoryBean localValidatorFactoryBean = new LocalValidatorFactoryBean();</span></span><br><span class="line"><span class="comment">//        localValidatorFactoryBean.setProviderClass(HibernateValidator.class);</span></span><br><span class="line"><span class="comment">//        return localValidatorFactoryBean;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 配置方法级别的数据校验，（非bean入参）</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MethodValidationPostProcessor <span class="title">methodValidationPostProcessor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MethodValidationPostProcessor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-在controller中使用"><a href="#3-在controller中使用" class="headerlink" title="3.在controller中使用"></a>3.在controller中使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用方法验证时，需要的被校验的类上添加@Validated注解</span></span><br><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 方法约束校验</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">index</span><span class="params">(<span class="meta">@NotEmpty</span> String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * bean约束校验</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">info</span><span class="params">(<span class="meta">@Valid</span> User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注：</strong> 此时不满足条件会报异常，还需要配置一个全局异常拦截器就好了</p><h2 id="springboot版本"><a href="#springboot版本" class="headerlink" title="springboot版本"></a>springboot版本</h2><ul><li>在springboot 2.3以下时已经默认给你整合好了，直接用就即可。</li><li>在使用2.3及以上版本时，需要添加额外jar包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="常见内置约束"><a href="#常见内置约束" class="headerlink" title="常见内置约束"></a>常见内置约束</h1><p>Hibernate Validator包含一组基本的常用约束。<a href="https://docs.jboss.org/hibernate/validator/6.2/reference/en-US/html_single/#validator-defineconstraints-spec">更多</a></p><table><thead><tr><th>名称</th><th>说明</th><th>支持的数据类型</th></tr></thead><tbody><tr><td><code>@AssertFalse</code></td><td>检查被注解的元素是否为false</td><td>Boolean， boolean</td></tr><tr><td><code>@DecimalMax(value=, inclusive=)</code></td><td>inclusive= false时，检查被注解的值是否小于指定的最大值。否则，该值是否小于或等于指定的最大值。</td><td>BigDecimal，BigInteger，byte，short，int，long和原始类型的相应的包装; CharSequence的任何子类型，Number和的javax.money.MonetaryAmoun任何子类型</td></tr><tr><td><code>@DecimalMin(value=, inclusive=)</code></td><td>inclusive= false时，检查被注解的值是否大于指定的最小值。否则，该值是否大于或等于指定的最小值。</td><td>同上</td></tr><tr><td><code>@Digits(integer=, fraction=)</code></td><td>检查被注解的值是否是最多由integer数字和fraction小数位组成的数字</td><td>同上</td></tr><tr><td><code>@Max(value=)</code></td><td>检查被注解的值是否小于或等于指定的最大值</td><td>同上</td></tr><tr><td><code>@Min(value=)</code></td><td>检查被注解的值是否大于或等于指定的最小值</td><td>同上</td></tr><tr><td><code>@Range(min=, max=)</code></td><td>检查带注释的值是否介于（包括）指定的最小值和最大值之间</td><td>同上</td></tr><tr><td><code>@Negative</code></td><td>检查元素是否严格为负。零值被视为无效。</td><td>同上</td></tr><tr><td><code>@Positive</code></td><td>检查元素是否严格为正。零值被视为无效。</td><td>同上</td></tr><tr><td><code>@NegativeOrZero</code></td><td>检查元素是否为负数或零。</td><td>同上</td></tr><tr><td><code>@PositiveOrZero</code></td><td>检查元素是否为正数或零。</td><td>同上</td></tr><tr><td><code>@Future</code></td><td>检查被注解的日期是否是将来的日期</td><td>java.util.Date，java.util.Calendar，java.time.Instant，java.time.LocalDate，java.time.LocalDateTime，java.time.LocalTime，java.time.MonthDay，java.time.OffsetDateTime，java.time.OffsetTime，java.time.Year，java.time.YearMonth，java.time.ZonedDateTime，java.time.chrono.HijrahDate，java.time.chrono.JapaneseDate，java.time.chrono.MinguoDate，java.time.chrono.ThaiBuddhistDate;</td></tr><tr><td><code>@FutureOrPresent</code></td><td>检查被注解的日期是否为现在或将来的日期</td><td>同上</td></tr><tr><td><code>@Past</code></td><td>检查带注释的日期是否是过去的日期</td><td>同上</td></tr><tr><td><code>@PastOrPresent</code></td><td>检查带注释的日期是否为过去或现在的日期</td><td>同上</td></tr><tr><td><code>@NotEmpty</code></td><td>检查带注释的元素是否不为null或为空</td><td>CharSequence，Collection，Map和数组</td></tr><tr><td><code>@Size(min=, max=)</code></td><td>检查带注释的元素的大小是否介于min和之间max（包括）</td><td>同上</td></tr><tr><td><code>@NotNull</code></td><td>检查注释的值不是 null</td><td>任意种类</td></tr><tr><td><code>@Null</code></td><td>检查注释的值是 null</td><td>同上</td></tr><tr><td><code>@Pattern(regex=, flags=)</code></td><td>检查带注释的字符串是否与正则表达式匹配</td><td>CharSequence</td></tr><tr><td><code>@URL(protocol=, host=, port=, regexp=, flags=)</code></td><td>根据RFC2396检查带注释的字符序列是否为有效URL。</td><td>同上</td></tr><tr><td><code>@Email</code></td><td>检查指定的字符序列是否为有效的电子邮件地址。</td><td>同上</td></tr><tr><td><code>@NotBlank</code></td><td>检查被注解的字符序列是否不为null以及修剪后的长度是否大于0。与的区别@NotEmpty在于，此约束只能应用于字符序列，并且尾随空白将被忽略。</td><td>同上</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;数据校验是一项常见的任务，在没有引入框架之前，我们通常的做法都是一堆的&lt;code&gt;if&lt;/code&gt; 、 &lt;code&gt;else&lt;/code&gt;等等，在代码中非常不美观，只用Hibernate Validator可以简化代码。&lt;/p&gt;
&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href</summary>
      
    
    
    
    
    <category term="hibernate-validator" scheme="https://www.lxy.zone/tags/hibernate-validator/"/>
    
  </entry>
  
  <entry>
    <title>vuex的使用总结</title>
    <link href="https://www.lxy.zone/2021/01/21/117_vuex%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>https://www.lxy.zone/2021/01/21/117_vuex%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-21T02:04:29.000Z</published>
    <updated>2022-01-21T03:58:59.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Vuex概述"><a href="#1-Vuex概述" class="headerlink" title="1.Vuex概述"></a>1.Vuex概述</h2><p>Vuex是实现组件全局状态（数据）管理的一种机制，可以方便的实现组件之间的数据共享</p><p>使用Vuex管理数据的好处：</p><ul><li>能够在vuex中集中管理共享的数据，便于开发和后期进行维护</li><li>能够高效的实现组件之间的数据共享，提高开发效率</li><li>存储在vuex中的数据是响应式的，当数据发生改变时，页面中的数据也会同步更新</li></ul><h2 id="2-Vuex的基本使用"><a href="#2-Vuex的基本使用" class="headerlink" title="2.Vuex的基本使用"></a>2.Vuex的基本使用</h2><p>创建带有vuex的vue项目，打开终端，输入命令：<code>vue ui</code><br>当项目仪表盘打开之后，我们点击页面左上角的项目管理下拉列表，再点击Vue项目管理器<br>点击创建项目，如下图所示<br><strong>第一步，设置项目名称和包管理器</strong><br><img src="https://halo-1257208482.image.myqcloud.com/image_1611194723904.png!webp" alt="image.png"><br><strong>第二步，设置手动配置项目</strong><br><img src="https://halo-1257208482.image.myqcloud.com/image_1611194748009.png!webp" alt="image.png"><br><strong>第三步，设置功能项</strong><br><img src="https://halo-1257208482.image.myqcloud.com/image_1611194763383.png!webp" alt="image.png"><br><img src="https://halo-1257208482.image.myqcloud.com/image_1611194774191.png!webp" alt="image.png"><br><strong>第四步，创建项目</strong><br><img src="https://halo-1257208482.image.myqcloud.com/image_1611194785805.png!webp" alt="image.png"></p><h2 id="3-使用Vuex完成计数器案例"><a href="#3-使用Vuex完成计数器案例" class="headerlink" title="3.使用Vuex完成计数器案例"></a>3.使用Vuex完成计数器案例</h2><p>打开刚刚创建的vuex项目，找到src目录中的App.vue组件，将代码重新编写如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">my-addition</span>&gt;</span><span class="tag">&lt;/<span class="name">my-addition</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>----------------------------------------<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">my-subtraction</span>&gt;</span><span class="tag">&lt;/<span class="name">my-subtraction</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Addition <span class="keyword">from</span> <span class="string">&#x27;./components/Addition.vue&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Subtraction <span class="keyword">from</span> <span class="string">&#x27;./components/Subtraction.vue&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;my-subtraction&#x27;</span>: Subtraction,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;my-addition&#x27;</span>: Addition</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>在components文件夹中创建Addition.vue组件，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前最新的count值为：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>在components文件夹中创建Subtraction.vue组件，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前最新的count值为：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>最后在项目根目录(与src平级)中创建 .prettierrc 文件，编写代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;semi&quot;</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;singleQuote&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Vuex中的核心特性"><a href="#4-Vuex中的核心特性" class="headerlink" title="4.Vuex中的核心特性"></a>4.Vuex中的核心特性</h2><h3 id="A-State"><a href="#A-State" class="headerlink" title="A.State"></a>A.State</h3><p>State提供唯一的公共数据源，所有共享的数据都要统一放到Store中的State中存储<br> 例如，打开项目中的store.js文件，在State对象中可以添加我们要共享的数据，如：count:0<br>在组件中访问State的方式：</p><ol><li>this.$store.state.全局数据名称  如：<code>this.$store.state.count</code></li><li>先按需导入mapState函数：<code> import &#123; mapState &#125; from &#39;vuex&#39;</code><br>然后数据映射为计算属性： <code>computed:&#123; ...mapState([&#39;全局数据名称&#39;]) &#125;</code></li></ol><h3 id="B-Mutation"><a href="#B-Mutation" class="headerlink" title="B.Mutation"></a>B.Mutation</h3><p>Mutation用于修改变更$store中的数据<br>使用方式：<br>打开store.js文件，在mutations中添加代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mutations: &#123;</span><br><span class="line">    <span class="function"><span class="title">add</span>(<span class="params">state,step</span>)</span>&#123;</span><br><span class="line">      <span class="comment">//第一个形参永远都是state也就是$state对象</span></span><br><span class="line">      <span class="comment">//第二个形参是调用add时传递的参数</span></span><br><span class="line">      state.count+=step;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>然后在Addition.vue中给按钮添加事件代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=&quot;Add&quot;&gt;+1&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">  Add()&#123;</span><br><span class="line">    //使用commit函数调用mutations中的对应函数，</span><br><span class="line">    //第一个参数就是我们要调用的mutations中的函数名</span><br><span class="line">    //第二个参数就是传递给add函数的参数</span><br><span class="line">    this.$store.commit(&#x27;add&#x27;,10)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用mutations的第二种方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import &#123; mapMutations &#125; from &#x27;vuex&#x27;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">  ...mapMutations([&#x27;add&#x27;])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState,mapMutations &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">      <span class="comment">//获得mapMutations映射的sub函数</span></span><br><span class="line">      ...mapMutations([<span class="string">&#x27;sub&#x27;</span>]),</span><br><span class="line">      <span class="comment">//当点击按钮时触发Sub函数</span></span><br><span class="line">      <span class="function"><span class="title">Sub</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="comment">//调用sub函数完成对数据的操作</span></span><br><span class="line">          <span class="built_in">this</span>.sub(<span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>:&#123;</span><br><span class="line">      ...mapState([<span class="string">&#x27;count&#x27;</span>])</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-Action"><a href="#C-Action" class="headerlink" title="C.Action"></a>C.Action</h3><p>在mutations中不能编写异步的代码，会导致vue调试器的显示出错。<br>在vuex中我们可以使用Action来执行异步操作。<br>操作步骤如下：<br>打开store.js文件，修改Action，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">actions: &#123;</span><br><span class="line">  <span class="function"><span class="title">addAsync</span>(<span class="params">context,step</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      context.commit(<span class="string">&#x27;add&#x27;</span>,step);</span><br><span class="line">    &#125;,<span class="number">2000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在Addition.vue中给按钮添加事件代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=&quot;AddAsync&quot;&gt;...+1&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">  AddAsync()&#123;</span><br><span class="line">    this.$store.dispatch(&#x27;addAsync&#x27;,5)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">  ...mapMutations([<span class="string">&#x27;subAsync&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState,mapMutations,mapActions &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">      <span class="comment">//获得mapMutations映射的sub函数</span></span><br><span class="line">      ...mapMutations([<span class="string">&#x27;sub&#x27;</span>]),</span><br><span class="line">      <span class="comment">//当点击按钮时触发Sub函数</span></span><br><span class="line">      <span class="function"><span class="title">Sub</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="comment">//调用sub函数完成对数据的操作</span></span><br><span class="line">          <span class="built_in">this</span>.sub(<span class="number">10</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//获得mapActions映射的addAsync函数</span></span><br><span class="line">      ...mapActions([<span class="string">&#x27;subAsync&#x27;</span>]),</span><br><span class="line">      <span class="function"><span class="title">asyncSub</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="built_in">this</span>.subAsync(<span class="number">5</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>:&#123;</span><br><span class="line">      ...mapState([<span class="string">&#x27;count&#x27;</span>])</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-Getter"><a href="#D-Getter" class="headerlink" title="D.Getter"></a>D.Getter</h3><p>Getter用于对Store中的数据进行加工处理形成新的数据<br>它只会包装Store中保存的数据，并不会修改Store中保存的数据，当Store中的数据发生变化时，Getter生成的内容也会随之变化<br>打开store.js文件，添加getters，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  .......</span><br><span class="line">  <span class="attr">getters</span>:&#123;</span><br><span class="line">    <span class="comment">//添加了一个showNum的属性</span></span><br><span class="line">    <span class="attr">showNum</span> : <span class="function"><span class="params">state</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;最新的count值为：&#x27;</span>+state.count;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然后打开Addition.vue中，添加插值表达式使用getters<br><code>&lt;h3&gt;&#123;&#123;$store.getters.showNum&#125;&#125;&lt;/h3&gt;</code></p><p>或者也可以在Addition.vue中，导入mapGetters，并将之映射为计算属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="attr">computed</span>:&#123;</span><br><span class="line">  ...mapGetters([<span class="string">&#x27;showNum&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-vuex数据持久化"><a href="#5-vuex数据持久化" class="headerlink" title="5. vuex数据持久化"></a>5. vuex数据持久化</h2><p>默认情况下vuex中的数据是存储再内存中的，只要浏览器一刷新它就没了，会造成一些不好的体验，所以使用一些插件把vuex中的数据存储到localStorage或者sessionStorage。</p><ol><li>安装 <code>npm install vuex-persistedstate --save</code></li><li>在store下的index.js中配置，存储在sessionStorage<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createPersistedState <span class="keyword">from</span> <span class="string">&quot;vuex-persistedstate&quot;</span></span><br><span class="line"> </span><br><span class="line">conststore = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"> </span><br><span class="line">    <span class="attr">plugins</span>: [createPersistedState(&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="attr">storage</span>:<span class="built_in">window</span>.sessionStorage</span><br><span class="line"> </span><br><span class="line">    &#125;)]</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Vuex概述&quot;&gt;&lt;a href=&quot;#1-Vuex概述&quot; class=&quot;headerlink&quot; title=&quot;1.Vuex概述&quot;&gt;&lt;/a&gt;1.Vuex概述&lt;/h2&gt;&lt;p&gt;Vuex是实现组件全局状态（数据）管理的一种机制，可以方便的实现组件之间的数据共享&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="vue" scheme="https://www.lxy.zone/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue-router路由的使用总结</title>
    <link href="https://www.lxy.zone/2021/01/19/116_vue-router%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>https://www.lxy.zone/2021/01/19/116_vue-router%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-19T01:49:46.000Z</published>
    <updated>2022-01-21T03:59:06.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-路由的概念"><a href="#1-路由的概念" class="headerlink" title="1. 路由的概念"></a>1. 路由的概念</h1><p>路由的本质就是一种对应关系，比如说我们在url地址中输入我们要访问的url地址之后，浏览器要去请求这个url地址对应的资源。<br>那么url地址和真实的资源之间就有一种对应的关系，就是路由。</p><p><strong>路由分为前端路由和后端路由</strong></p><ol><li>后端路由是由服务器端进行实现，并完成资源的分发</li><li>前端路由是依靠hash值(锚链接)的变化进行实现 </li></ol><p>后端路由性能相对前端路由来说较低，所以，我们接下来主要学习的是前端路由<br><strong>前端路由的基本概念：</strong> 根据不同的事件来显示不同的页面内容，即事件与事件处理函数之间的对应关系<br>前端路由主要做的事情就是监听事件并分发执行事件处理函数</p><h1 id="2-前端路由的初体验"><a href="#2-前端路由的初体验" class="headerlink" title="2. 前端路由的初体验"></a>2. 前端路由的初体验</h1><p>前端路由是基于hash值的变化进行实现的（比如点击页面中的菜单或者按钮改变URL的hash值，根据hash值的变化来控制组件的切换）<br>核心实现依靠一个事件，即监听hash值变化的事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">window.onhashchange = function()&#123;</span><br><span class="line">    //location.hash可以获取到最新的hash值</span><br><span class="line">    location.hash</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端路由实现tab栏切换：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;!-- 导入 vue 文件 --&gt;</span><br><span class="line">    &lt;script src=&quot;./lib/vue_2.5.22.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 被 vue 实例控制的 div 区域 --&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;!-- 切换组件的超链接 --&gt;</span><br><span class="line">    &lt;a href=&quot;#/zhuye&quot;&gt;主页&lt;/a&gt; </span><br><span class="line">    &lt;a href=&quot;#/keji&quot;&gt;科技&lt;/a&gt; </span><br><span class="line">    &lt;a href=&quot;#/caijing&quot;&gt;财经&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#/yule&quot;&gt;娱乐&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据 :is 属性指定的组件名称，把对应的组件渲染到 component 标签所在的位置 --&gt;</span><br><span class="line">    &lt;!-- 可以把 component 标签当做是【组件的占位符】 --&gt;</span><br><span class="line">    &lt;component :is=&quot;comName&quot;&gt;&lt;/component&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    // #region 定义需要被切换的 4 个组件</span><br><span class="line">    // 主页组件</span><br><span class="line">    const zhuye = &#123;</span><br><span class="line">        template: &#x27;&lt;h1&gt;主页信息&lt;/h1&gt;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 科技组件</span><br><span class="line">    const keji = &#123;</span><br><span class="line">        template: &#x27;&lt;h1&gt;科技信息&lt;/h1&gt;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 财经组件</span><br><span class="line">    const caijing = &#123;</span><br><span class="line">        template: &#x27;&lt;h1&gt;财经信息&lt;/h1&gt;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 娱乐组件</span><br><span class="line">    const yule = &#123;</span><br><span class="line">        template: &#x27;&lt;h1&gt;娱乐信息&lt;/h1&gt;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    // #endregion</span><br><span class="line"></span><br><span class="line">    // #region vue 实例对象</span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#app&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">        comName: &#x27;zhuye&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 注册私有组件</span><br><span class="line">        components: &#123;</span><br><span class="line">        zhuye,</span><br><span class="line">        keji,</span><br><span class="line">        caijing,</span><br><span class="line">        yule</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    // #endregion</span><br><span class="line"></span><br><span class="line">    // 监听 window 的 onhashchange 事件，根据获取到的最新的 hash 值，切换要显示的组件的名称</span><br><span class="line">    window.onhashchange = function() &#123;</span><br><span class="line">        // 通过 location.hash 获取到最新的 hash 值</span><br><span class="line">        console.log(location.hash);</span><br><span class="line">        switch(location.hash.slice(1))&#123;</span><br><span class="line">        case &#x27;/zhuye&#x27;:</span><br><span class="line">            vm.comName = &#x27;zhuye&#x27;</span><br><span class="line">        break</span><br><span class="line">        case &#x27;/keji&#x27;:</span><br><span class="line">            vm.comName = &#x27;keji&#x27;</span><br><span class="line">        break</span><br><span class="line">        case &#x27;/caijing&#x27;:</span><br><span class="line">            vm.comName = &#x27;caijing&#x27;</span><br><span class="line">        break</span><br><span class="line">        case &#x27;/yule&#x27;:</span><br><span class="line">            vm.comName = &#x27;yule&#x27;</span><br><span class="line">        break</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>核心思路：<br>在页面中有一个vue实例对象，vue实例对象中有四个组件，分别是tab栏切换需要显示的组件内容<br>在页面中有四个超链接，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#/zhuye&quot;&gt;主页&lt;/a&gt; </span><br><span class="line">&lt;a href=&quot;#/keji&quot;&gt;科技&lt;/a&gt; </span><br><span class="line">&lt;a href=&quot;#/caijing&quot;&gt;财经&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;#/yule&quot;&gt;娱乐&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>当我们点击这些超链接的时候，就会改变url地址中的hash值，当hash值被改变时，就会触发onhashchange事件<br>在触发onhashchange事件的时候，我们根据hash值来让不同的组件进行显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">window.onhashchange = function() &#123;</span><br><span class="line">    // 通过 location.hash 获取到最新的 hash 值</span><br><span class="line">    console.log(location.hash);</span><br><span class="line">    switch(location.hash.slice(1))&#123;</span><br><span class="line">        case &#x27;/zhuye&#x27;:</span><br><span class="line">        //通过更改数据comName来指定显示的组件</span><br><span class="line">        //因为 &lt;component :is=&quot;comName&quot;&gt;&lt;/component&gt; ，组件已经绑定了comName</span><br><span class="line">        vm.comName = &#x27;zhuye&#x27;</span><br><span class="line">        break</span><br><span class="line">        case &#x27;/keji&#x27;:</span><br><span class="line">        vm.comName = &#x27;keji&#x27;</span><br><span class="line">        break</span><br><span class="line">        case &#x27;/caijing&#x27;:</span><br><span class="line">        vm.comName = &#x27;caijing&#x27;</span><br><span class="line">        break</span><br><span class="line">        case &#x27;/yule&#x27;:</span><br><span class="line">        vm.comName = &#x27;yule&#x27;</span><br><span class="line">        break</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-Vue-Router简介"><a href="#3-Vue-Router简介" class="headerlink" title="3. Vue Router简介"></a>3. Vue Router简介</h1><p>它是一个Vue.js官方提供的路由管理器。是一个功能更加强大的前端路由器，推荐使用。<br>Vue Router和Vue.js非常契合，可以一起方便的实现SPA(single page web application,单页应用程序)应用程序的开发。<br>Vue Router依赖于Vue，所以需要先引入Vue，再引入Vue Router</p><p>Vue Router的特性：</p><ul><li>支持H5历史模式或者hash模式</li><li>支持嵌套路由</li><li>支持路由参数</li><li>支持编程式路由</li><li>支持命名路由</li><li>支持路由导航守卫</li><li>支持路由过渡动画特效</li><li>支持路由懒加载</li><li>支持路由滚动行为</li></ul><h1 id="4-Vue-Router的使用步骤-★★★"><a href="#4-Vue-Router的使用步骤-★★★" class="headerlink" title="4.Vue Router的使用步骤(★★★)"></a>4.Vue Router的使用步骤(★★★)</h1><ol><li>导入js文件<br><code>&lt;script src=&quot;lib/vue_2.5.22.js&quot;&gt;&lt;/script&gt;</code><br><code>&lt;script src=&quot;lib/vue-router_3.0.2.js&quot;&gt;&lt;/script&gt;</code></li><li>添加路由链接:<router-link>是路由中提供的标签，默认会被渲染为a标签，to属性默认被渲染为href属性，to属性的值会被渲染为#开头的hash地址<br><code>&lt;router-link to=&quot;/user&quot;&gt;User&lt;/router-link&gt;</code><br><code>&lt;router-link to=&quot;/login&quot;&gt;Login&lt;/router-link&gt;</code></li><li>添加路由填充位（路由占位符）<br><code>&lt;router-view&gt;&lt;/router-view&gt;</code></li><li>定义路由组件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = &#123; <span class="attr">template</span>:<span class="string">&quot;&lt;div&gt;This is User&lt;/div&gt;&quot;</span> &#125;</span><br><span class="line"><span class="keyword">var</span> Login = &#123; <span class="attr">template</span>:<span class="string">&quot;&lt;div&gt;This is Login&lt;/div&gt;&quot;</span> &#125;</span><br></pre></td></tr></table></figure></li><li>配置路由规则并创建路由实例<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">        <span class="comment">//每一个路由规则都是一个对象，对象中至少包含path和component两个属性</span></span><br><span class="line">        <span class="comment">//path表示  路由匹配的hash地址，component表示路由规则对应要展示的组件对象</span></span><br><span class="line">        &#123;<span class="attr">path</span>:<span class="string">&quot;/user&quot;</span>,<span class="attr">component</span>:User&#125;,</span><br><span class="line">        &#123;<span class="attr">path</span>:<span class="string">&quot;/login&quot;</span>,<span class="attr">component</span>:Login&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>将路由挂载到Vue实例中<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="comment">//通过router属性挂载路由对象</span></span><br><span class="line">    <span class="attr">router</span>:myRouter</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><p>小结：<br>Vue Router的使用步骤还是比较清晰的，按照步骤一步一步就能完成路由操作<br>A.导入js文件<br>B.添加路由链接<br>C.添加路由占位符(最后路由展示的组件就会在占位符的位置显示)<br>D.定义路由组件<br>E.配置路由规则并创建路由实例<br>F.将路由挂载到Vue实例中</p><p>补充：<br>路由重定向：可以通过路由重定向为页面设置默认展示的组件<br>在路由规则中添加一条路由规则即可，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        <span class="comment">//path设置为/表示页面最初始的地址 / ,redirect表示要被重定向的新地址，设置为一个路由即可</span></span><br><span class="line">        &#123; <span class="attr">path</span>:<span class="string">&quot;/&quot;</span>,<span class="attr">redirect</span>:<span class="string">&quot;/user&quot;</span>&#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/user&quot;</span>, <span class="attr">component</span>: User &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>, <span class="attr">component</span>: Login &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="5-嵌套路由，动态路由的实现方式"><a href="#5-嵌套路由，动态路由的实现方式" class="headerlink" title="5.嵌套路由，动态路由的实现方式"></a>5.嵌套路由，动态路由的实现方式</h1><h2 id="A-嵌套路由的概念-★★★"><a href="#A-嵌套路由的概念-★★★" class="headerlink" title="A.嵌套路由的概念(★★★)"></a>A.嵌套路由的概念(★★★)</h2><p>当我们进行路由的时候显示的组件中还有新的子级路由链接以及内容。</p><p>嵌套路由最关键的代码在于理解子级路由的概念：<br>比如我们有一个/login的路由<br>那么/login下面还可以添加子级路由，如:<br>/login/account<br>/login/phone</p><p>参考代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">var User = &#123; template: &quot;&lt;div&gt;This is User&lt;/div&gt;&quot; &#125;</span><br><span class="line">//Login组件中的模板代码里面包含了子级路由链接以及子级路由的占位符</span><br><span class="line">    var Login = &#123; template: `&lt;div&gt;</span><br><span class="line">        &lt;h1&gt;This is Login&lt;/h1&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;router-link to=&quot;/login/account&quot;&gt;账号密码登录&lt;/router-link&gt;</span><br><span class="line">        &lt;router-link to=&quot;/login/phone&quot;&gt;扫码登录&lt;/router-link&gt;</span><br><span class="line">        &lt;!-- 子路由组件将会在router-view中显示 --&gt;</span><br><span class="line">        &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">        &lt;/div&gt;` &#125;</span><br><span class="line"></span><br><span class="line">    //定义两个子级路由组件</span><br><span class="line">    var account = &#123; template:&quot;&lt;div&gt;账号：&lt;input&gt;&lt;br&gt;密码：&lt;input&gt;&lt;/div&gt;&quot;&#125;;</span><br><span class="line">    var phone = &#123; template:&quot;&lt;h1&gt;扫我二维码&lt;/h1&gt;&quot;&#125;;</span><br><span class="line">    var myRouter = new VueRouter(&#123;</span><br><span class="line">        //routes是路由规则数组</span><br><span class="line">        routes: [</span><br><span class="line">            &#123; path:&quot;/&quot;,redirect:&quot;/user&quot;&#125;,</span><br><span class="line">            &#123; path: &quot;/user&quot;, component: User &#125;,</span><br><span class="line">            &#123; </span><br><span class="line">                path: &quot;/login&quot;, </span><br><span class="line">                component: Login,</span><br><span class="line">                //通过children属性为/login添加子路由规则</span><br><span class="line">                children:[</span><br><span class="line">                    &#123; path: &quot;/login/account&quot;, component: account &#125;,</span><br><span class="line">                    &#123; path: &quot;/login/phone&quot;, component: phone &#125;,</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    var vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#app&#x27;,</span><br><span class="line">        data: &#123;&#125;,</span><br><span class="line">        methods: &#123;&#125;,</span><br><span class="line">        router:myRouter</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h2 id="B-动态路由匹配-★★★"><a href="#B-动态路由匹配-★★★" class="headerlink" title="B.动态路由匹配(★★★)"></a>B.动态路由匹配(★★★)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = &#123; <span class="attr">template</span>:<span class="string">&quot;&lt;div&gt;用户：&#123;&#123;$route.params.id&#125;&#125;&lt;/div&gt;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        <span class="comment">//通过/:参数名  的形式传递参数 </span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/user/:id&quot;</span>, <span class="attr">component</span>: User &#125;,</span><br><span class="line">        </span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>补充：<br>如果使用<code>$route.params.id</code>来获取路径传参的数据不够灵活。<br>1.我们可以通过props来接收参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = &#123; </span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&quot;id&quot;</span>],</span><br><span class="line">    <span class="attr">template</span>:<span class="string">&quot;&lt;div&gt;用户：&#123;&#123;id&#125;&#125;&lt;/div&gt;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        <span class="comment">//通过/:参数名  的形式传递参数 </span></span><br><span class="line">        <span class="comment">//如果props设置为true，route.params将会被设置为组件属性</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/user/:id&quot;</span>, <span class="attr">component</span>: User,<span class="attr">props</span>:<span class="literal">true</span> &#125;,</span><br><span class="line">        </span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.还有一种情况，我们可以将props设置为对象，那么就直接将对象的数据传递给<br>组件进行使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = &#123; </span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&quot;username&quot;</span>,<span class="string">&quot;pwd&quot;</span>],</span><br><span class="line">    <span class="attr">template</span>:<span class="string">&quot;&lt;div&gt;用户：&#123;&#123;username&#125;&#125;---&#123;&#123;pwd&#125;&#125;&lt;/div&gt;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        <span class="comment">//通过/:参数名  的形式传递参数 </span></span><br><span class="line">        <span class="comment">//如果props设置为对象，则传递的是对象中的数据给组件</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/user/:id&quot;</span>, <span class="attr">component</span>: User,<span class="attr">props</span>:&#123;<span class="attr">username</span>:<span class="string">&quot;jack&quot;</span>,<span class="attr">pwd</span>:<span class="number">123</span>&#125; &#125;,</span><br><span class="line">        </span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>3.如果想要获取传递的参数值还想要获取传递的对象数据，那么props应该设置为<br>函数形式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = &#123; </span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&quot;username&quot;</span>,<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;id&quot;</span>],</span><br><span class="line">    <span class="attr">template</span>:<span class="string">&quot;&lt;div&gt;用户：&#123;&#123;id&#125;&#125; -&gt; &#123;&#123;username&#125;&#125;---&#123;&#123;pwd&#125;&#125;&lt;/div&gt;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        <span class="comment">//通过/:参数名  的形式传递参数 </span></span><br><span class="line">        <span class="comment">//如果props设置为函数，则通过函数的第一个参数获取路由对象</span></span><br><span class="line">        <span class="comment">//并可以通过路由对象的params属性获取传递的参数</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/user/:id&quot;</span>, <span class="attr">component</span>: User,<span class="attr">props</span>:<span class="function">(<span class="params">route</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="attr">username</span>:<span class="string">&quot;jack&quot;</span>,<span class="attr">pwd</span>:<span class="number">123</span>,<span class="attr">id</span>:route.params.id&#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="6-命名路由以及编程式导航"><a href="#6-命名路由以及编程式导航" class="headerlink" title="6.命名路由以及编程式导航"></a>6.命名路由以及编程式导航</h1><h2 id="A-命名路由：给路由取别名"><a href="#A-命名路由：给路由取别名" class="headerlink" title="A.命名路由：给路由取别名"></a>A.命名路由：给路由取别名</h2><p>案例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myRouter = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">//routes是路由规则数组</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        <span class="comment">//通过name属性为路由添加一个别名</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&quot;/user/:id&quot;</span>, <span class="attr">component</span>: User, <span class="attr">name</span>:<span class="string">&quot;user&quot;</span>&#125;,</span><br><span class="line">        </span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>添加了别名之后，可以使用别名进行跳转</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/user&quot;</span>&gt;</span>User<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; name:&#x27;user&#x27; , params: &#123;id:123&#125; &#125;&quot;</span>&gt;</span>User<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还可以编程式导航<br><code>myRouter.push( &#123; name:&#39;user&#39; , params: &#123;id:123&#125; &#125; )</code></p><h2 id="B-编程式导航-★★★"><a href="#B-编程式导航-★★★" class="headerlink" title="B.编程式导航(★★★)"></a>B.编程式导航(★★★)</h2><p>页面导航的两种方式：</p><ol><li>声明式导航：通过点击链接的方式实现的导航</li><li>编程式导航：调用js的api方法实现导航</li></ol><p>Vue-Router中常见的导航方式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&quot;hash地址&quot;</span>);</span><br><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123; <span class="attr">name</span>:<span class="string">&#x27;user&#x27;</span> , <span class="attr">params</span>: &#123;<span class="attr">id</span>:<span class="number">123</span>&#125; &#125;);</span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123; <span class="attr">path</span>:<span class="string">&quot;/login&quot;</span> &#125;);</span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123; <span class="attr">path</span>:<span class="string">&quot;/login&quot;</span>,<span class="attr">query</span>:&#123;<span class="attr">username</span>:<span class="string">&quot;jack&quot;</span>&#125; &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.$router.go( n );<span class="comment">//n为数字，参考history.go</span></span><br><span class="line"><span class="built_in">this</span>.$router.go( -<span class="number">1</span> );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-路由的概念&quot;&gt;&lt;a href=&quot;#1-路由的概念&quot; class=&quot;headerlink&quot; title=&quot;1. 路由的概念&quot;&gt;&lt;/a&gt;1. 路由的概念&lt;/h1&gt;&lt;p&gt;路由的本质就是一种对应关系，比如说我们在url地址中输入我们要访问的url地址之后，浏览器要去请</summary>
      
    
    
    
    
    <category term="vue" scheme="https://www.lxy.zone/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue中的接口调用</title>
    <link href="https://www.lxy.zone/2021/01/18/115_vue%E4%B8%AD%E7%9A%84%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/"/>
    <id>https://www.lxy.zone/2021/01/18/115_vue%E4%B8%AD%E7%9A%84%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/</id>
    <published>2021-01-18T06:18:55.000Z</published>
    <updated>2022-01-21T03:59:13.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="接口调用方式"><a href="#接口调用方式" class="headerlink" title="接口调用方式"></a>接口调用方式</h3><ul><li>原生ajax</li><li>基于jQuery的ajax</li><li>fetch</li><li>axios</li></ul><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><ul><li>JavaScript的执行环境是「单线程」</li><li>所谓单线程，是指JS引擎中负责解释和执行JavaScript代码的线程只有一个，也就是一次只能完成一项任务，这个任务执行完后才能执行下一个，它会「阻塞」其他任务。这个任务可称为主线程</li><li>异步模式可以一起执行<strong>多个任务</strong></li><li>JS中常见的异步调用<ul><li>定时任何</li><li>ajax</li><li>事件函数</li></ul></li></ul><h3 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h3><ul><li>主要解决异步深层嵌套的问题</li><li>promise 提供了简洁的API  使得异步操作更加容易</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">   1. Promise基本使用</span></span></span><br><span class="line"><span class="comment"><span class="javascript">         我们使用new来构建一个Promise  Promise的构造函数接收一个参数，是函数，并且传入两个参数：   resolve，reject， 分别表示异步操作执行成功后的回调函数和异步操作执行失败后的回调函数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">  */</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//2. 这里用于实现异步任务  setTimeout</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(flag) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//3. 正常情况</span></span></span><br><span class="line"><span class="javascript">        resolve(<span class="string">&#x27;hello&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//4. 异常情况</span></span></span><br><span class="line"><span class="javascript">        reject(<span class="string">&#x27;出错了&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;, <span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript">  <span class="comment">//  5 Promise实例生成以后，可以用then方法指定resolved状态和reject状态的回调函数 </span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//  在then方法中，你也可以直接return数据而不是Promise对象，在后面的then中就可以接收到数据了  </span></span></span><br><span class="line"><span class="javascript">  p.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(data)</span></span><br><span class="line"><span class="javascript">  &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">info</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(info)</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基于Promise发送Ajax请求"><a href="#基于Promise发送Ajax请求" class="headerlink" title="基于Promise发送Ajax请求"></a>基于Promise发送Ajax请求</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">   /*</span><br><span class="line">     基于Promise发送Ajax请求</span><br><span class="line">   */</span><br><span class="line">   function queryData(url) &#123;</span><br><span class="line">    #   1.1 创建一个Promise实例</span><br><span class="line">     var p = new Promise(function(resolve, reject)&#123;</span><br><span class="line">       var xhr = new XMLHttpRequest();</span><br><span class="line">       xhr.onreadystatechange = function()&#123;</span><br><span class="line">         if(xhr.readyState != 4) return;</span><br><span class="line">         if(xhr.readyState == 4 &amp;&amp; xhr.status == 200) &#123;</span><br><span class="line">           # 1.2 处理正常的情况</span><br><span class="line">           resolve(xhr.responseText);</span><br><span class="line">         &#125;else&#123;</span><br><span class="line">           # 1.3 处理异常情况</span><br><span class="line">           reject(&#x27;服务器错误&#x27;);</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;;</span><br><span class="line">       xhr.open(&#x27;get&#x27;, url);</span><br><span class="line">       xhr.send(null);</span><br><span class="line">     &#125;);</span><br><span class="line">     return p;</span><br><span class="line">   &#125;</span><br><span class="line"># 注意：  这里需要开启一个服务 </span><br><span class="line">   # 在then方法中，你也可以直接return数据而不是Promise对象，在后面的then中就可以接收到数据了</span><br><span class="line">   queryData(&#x27;http://localhost:3000/data&#x27;)</span><br><span class="line">     .then(function(data)&#123;</span><br><span class="line">       console.log(data)</span><br><span class="line">       #  1.4 想要继续链式编程下去 需要 return  </span><br><span class="line">       return queryData(&#x27;http://localhost:3000/data1&#x27;);</span><br><span class="line">     &#125;)</span><br><span class="line">     .then(function(data)&#123;</span><br><span class="line">       console.log(data);</span><br><span class="line">       return queryData(&#x27;http://localhost:3000/data2&#x27;);</span><br><span class="line">     &#125;)</span><br><span class="line">     .then(function(data)&#123;</span><br><span class="line">       console.log(data)</span><br><span class="line">     &#125;);</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Promise-基本API"><a href="#Promise-基本API" class="headerlink" title="Promise  基本API"></a>Promise  基本API</h3><h4 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h4><h5 id="then"><a href="#then" class="headerlink" title=".then()"></a>.then()</h5><ul><li>得到异步任务正确的结果</li></ul><h5 id="catch"><a href="#catch" class="headerlink" title=".catch()"></a>.catch()</h5><ul><li>获取异常信息</li></ul><h5 id="finally"><a href="#finally" class="headerlink" title=".finally()"></a>.finally()</h5><ul><li>成功与否都会执行（不是正式标准） </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">  /*</span><br><span class="line">    Promise常用API-实例方法</span><br><span class="line">  */</span><br><span class="line">  // console.dir(Promise);</span><br><span class="line">  function foo() &#123;</span><br><span class="line">    return new Promise(function(resolve, reject)&#123;</span><br><span class="line">      setTimeout(function()&#123;</span><br><span class="line">        // resolve(123);</span><br><span class="line">        reject(&#x27;error&#x27;);</span><br><span class="line">      &#125;, 100);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  // foo()</span><br><span class="line">  //   .then(function(data)&#123;</span><br><span class="line">  //     console.log(data)</span><br><span class="line">  //   &#125;)</span><br><span class="line">  //   .catch(function(data)&#123;</span><br><span class="line">  //     console.log(data)</span><br><span class="line">  //   &#125;)</span><br><span class="line">  //   .finally(function()&#123;</span><br><span class="line">  //     console.log(&#x27;finished&#x27;)</span><br><span class="line">  //   &#125;);</span><br><span class="line"></span><br><span class="line">  // --------------------------</span><br><span class="line">  // 两种写法是等效的</span><br><span class="line">  foo()</span><br><span class="line">    .then(function(data)&#123;</span><br><span class="line">      # 得到异步任务正确的结果</span><br><span class="line">      console.log(data)</span><br><span class="line">    &#125;,function(data)&#123;</span><br><span class="line">      # 获取异常信息</span><br><span class="line">      console.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">    # 成功与否都会执行（不是正式标准） </span><br><span class="line">    .finally(function()&#123;</span><br><span class="line">      console.log(&#x27;finished&#x27;)</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h4><h5 id="all"><a href="#all" class="headerlink" title=".all()"></a>.all()</h5><ul><li><code>Promise.all</code>方法接受一个数组作参数，数组中的对象（p1、p2、p3）均为promise实例（如果不是一个promise，该项会被用<code>Promise.resolve</code>转换为一个promise)。它的状态由这三个promise实例决定</li></ul><h5 id="race"><a href="#race" class="headerlink" title=".race()"></a>.race()</h5><ul><li><code>Promise.race</code>方法同样接受一个数组作参数。当p1, p2, p3中有一个实例的状态发生改变（变为<code>fulfilled</code>或<code>rejected</code>），p的状态就跟着改变。并把第一个改变状态的promise的返回值，传给p的回调函数</li></ul><p>​    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">    Promise常用API-对象方法</span></span></span><br><span class="line"><span class="comment"><span class="javascript">  */</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">// console.dir(Promise)</span></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">queryData</span>(<span class="params">url</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">      xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(xhr.readyState != <span class="number">4</span>) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 处理正常的情况</span></span></span><br><span class="line"><span class="javascript">          resolve(xhr.responseText);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 处理异常情况</span></span></span><br><span class="line"><span class="javascript">          reject(<span class="string">&#x27;服务器错误&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;;</span></span><br><span class="line"><span class="javascript">      xhr.open(<span class="string">&#x27;get&#x27;</span>, url);</span></span><br><span class="line"><span class="javascript">      xhr.send(<span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> p1 = queryData(<span class="string">&#x27;http://localhost:3000/a1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> p2 = queryData(<span class="string">&#x27;http://localhost:3000/a2&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> p3 = queryData(<span class="string">&#x27;http://localhost:3000/a3&#x27;</span>);</span></span><br><span class="line"><span class="javascript">   <span class="built_in">Promise</span>.all([p1,p2,p3]).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">     <span class="comment">//   all 中的参数  [p1,p2,p3]   和 返回的结果一 一对应[&quot;HELLO TOM&quot;, &quot;HELLO JERRY&quot;, &quot;HELLO SPIKE&quot;]</span></span></span><br><span class="line"><span class="javascript">     <span class="built_in">console</span>.log(result) <span class="comment">//[&quot;HELLO TOM&quot;, &quot;HELLO JERRY&quot;, &quot;HELLO SPIKE&quot;]</span></span></span><br><span class="line"><span class="javascript">   &#125;)</span></span><br><span class="line"><span class="javascript">  <span class="built_in">Promise</span>.race([p1,p2,p3]).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 由于p1执行较快，Promise的then()将获得结果&#x27;P1&#x27;。p2,p3仍在继续执行，但执行结果将被丢弃。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(result) <span class="comment">// &quot;HELLO TOM&quot;</span></span></span><br><span class="line"><span class="javascript">  &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h3><ul><li>Fetch API是新的ajax解决方案 Fetch会返回Promise</li><li><strong>fetch不是ajax的进一步封装，而是原生js，没有使用XMLHttpRequest对象</strong>。</li><li>fetch(url, options).then(）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">    Fetch API 基本用法</span></span></span><br><span class="line"><span class="comment"><span class="javascript">    fetch(url).then()</span></span></span><br><span class="line"><span class="comment"><span class="javascript">   第一个参数请求的路径   Fetch会返回Promise   所以我们可以使用then 拿到请求成功的结果 </span></span></span><br><span class="line"><span class="comment"><span class="javascript">  */</span></span></span><br><span class="line"><span class="javascript">  fetch(<span class="string">&#x27;http://localhost:3000/fdata&#x27;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// text()方法属于fetchAPI的一部分，它返回一个Promise实例对象，用于获取后台返回的数据</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> data.text();</span></span><br><span class="line"><span class="javascript">  &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//   在这个then里面我们能拿到最终的数据  </span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="javascript">  &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fetch-API-中的-HTTP-请求"><a href="#fetch-API-中的-HTTP-请求" class="headerlink" title="fetch API  中的 HTTP  请求"></a>fetch API  中的 HTTP  请求</h4><ul><li>fetch(url, options).then(）</li><li>HTTP协议，它给我们提供了很多的方法，如POST，GET，DELETE，UPDATE，PATCH和PUT<ul><li>默认的是 GET 请求</li><li>需要在 options 对象中 指定对应的 method       method:请求使用的方法 </li><li>post 和 普通 请求的时候 需要在options 中 设置  请求头 headers   和  body</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">     /*</span><br><span class="line">           Fetch API 调用接口传递参数</span><br><span class="line">     */</span><br><span class="line">    #1.1 GET参数传递 - 传统URL  通过url  ？ 的形式传参 </span><br><span class="line">     fetch(&#x27;http://localhost:3000/books?id=123&#x27;, &#123;</span><br><span class="line">         # get 请求可以省略不写 默认的是GET </span><br><span class="line">             method: &#x27;get&#x27;</span><br><span class="line">         &#125;)</span><br><span class="line">         .then(function(data) &#123;</span><br><span class="line">         # 它返回一个Promise实例对象，用于获取后台返回的数据</span><br><span class="line">             return data.text();</span><br><span class="line">         &#125;).then(function(data) &#123;</span><br><span class="line">         # 在这个then里面我们能拿到最终的数据  </span><br><span class="line">             console.log(data)</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">   #1.2  GET参数传递  restful形式的URL  通过/ 的形式传递参数  即  id = 456 和id后台的配置有关   </span><br><span class="line">     fetch(&#x27;http://localhost:3000/books/456&#x27;, &#123;</span><br><span class="line">         # get 请求可以省略不写 默认的是GET </span><br><span class="line">             method: &#x27;get&#x27;</span><br><span class="line">         &#125;)</span><br><span class="line">         .then(function(data) &#123;</span><br><span class="line">             return data.text();</span><br><span class="line">         &#125;).then(function(data) &#123;</span><br><span class="line">             console.log(data)</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">    #2.1  DELETE请求方式参数传递      删除id  是  id=789</span><br><span class="line">     fetch(&#x27;http://localhost:3000/books/789&#x27;, &#123;</span><br><span class="line">             method: &#x27;delete&#x27;</span><br><span class="line">         &#125;)</span><br><span class="line">         .then(function(data) &#123;</span><br><span class="line">             return data.text();</span><br><span class="line">         &#125;).then(function(data) &#123;</span><br><span class="line">             console.log(data)</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">    #3 POST请求传参</span><br><span class="line">     fetch(&#x27;http://localhost:3000/books&#x27;, &#123;</span><br><span class="line">             method: &#x27;post&#x27;,</span><br><span class="line">         # 3.1  传递数据 </span><br><span class="line">             body: &#x27;uname=lisi&amp;pwd=123&#x27;,</span><br><span class="line">         #  3.2  设置请求头 </span><br><span class="line">             headers: &#123;</span><br><span class="line">                 &#x27;Content-Type&#x27;: &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;)</span><br><span class="line">         .then(function(data) &#123;</span><br><span class="line">             return data.text();</span><br><span class="line">         &#125;).then(function(data) &#123;</span><br><span class="line">             console.log(data)</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">    # POST请求传参</span><br><span class="line">     fetch(&#x27;http://localhost:3000/books&#x27;, &#123;</span><br><span class="line">             method: &#x27;post&#x27;,</span><br><span class="line">             body: JSON.stringify(&#123;</span><br><span class="line">                 uname: &#x27;张三&#x27;,</span><br><span class="line">                 pwd: &#x27;456&#x27;</span><br><span class="line">             &#125;),</span><br><span class="line">             headers: &#123;</span><br><span class="line">                 &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;)</span><br><span class="line">         .then(function(data) &#123;</span><br><span class="line">             return data.text();</span><br><span class="line">         &#125;).then(function(data) &#123;</span><br><span class="line">             console.log(data)</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">     # PUT请求传参     修改id 是 123 的 </span><br><span class="line">     fetch(&#x27;http://localhost:3000/books/123&#x27;, &#123;</span><br><span class="line">             method: &#x27;put&#x27;,</span><br><span class="line">             body: JSON.stringify(&#123;</span><br><span class="line">                 uname: &#x27;张三&#x27;,</span><br><span class="line">                 pwd: &#x27;789&#x27;</span><br><span class="line">             &#125;),</span><br><span class="line">             headers: &#123;</span><br><span class="line">                 &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;)</span><br><span class="line">         .then(function(data) &#123;</span><br><span class="line">             return data.text();</span><br><span class="line">         &#125;).then(function(data) &#123;</span><br><span class="line">             console.log(data)</span><br><span class="line">         &#125;);</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fetchAPI-中-响应格式"><a href="#fetchAPI-中-响应格式" class="headerlink" title="fetchAPI 中 响应格式"></a>fetchAPI 中 响应格式</h4><ul><li>用fetch来获取数据，如果响应正常返回，我们首先看到的是一个response对象，其中包括返回的一堆原始字节，这些字节需要在收到后，需要我们通过调用方法将其转换为相应格式的数据，比如<code>JSON</code>，<code>BLOB</code>或者<code>TEXT</code>等等</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  Fetch响应结果的数据格式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">fetch(<span class="string">&#x27;http://localhost:3000/json&#x27;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// return data.json();   //  将获取到的数据使用 json 转换对象</span></span><br><span class="line">  <span class="keyword">return</span> data.text(); <span class="comment">//  //  将获取到的数据 转换成字符串 </span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// console.log(data.uname)</span></span><br><span class="line">  <span class="comment">// console.log(typeof data)</span></span><br><span class="line">  <span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(data);</span><br><span class="line">  <span class="built_in">console</span>.log(obj.uname,obj.age,obj.gender)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h3><ul><li>基于promise用于浏览器和node.js的http客户端</li><li>支持浏览器和node.js</li><li>支持promise</li><li>能拦截请求和响应</li><li>自动转换JSON数据</li><li>能转换请求和响应数据</li></ul><h4 id="axios基础用法"><a href="#axios基础用法" class="headerlink" title="axios基础用法"></a>axios基础用法</h4><ul><li>get和 delete请求传递参数<ul><li>通过传统的url  以 ? 的形式传递参数</li><li> restful 形式传递参数 </li><li>通过params  形式传递参数 </li></ul></li><li>post  和 put  请求传递参数<ul><li>通过选项传递参数</li><li> 通过 URLSearchParams  传递参数 </li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">   # <span class="number">1.</span> 发送get 请求 </span><br><span class="line">axios.get(<span class="string">&#x27;http://localhost:3000/adata&#x27;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123; </span><br><span class="line">     #  拿到 ret 是一个对象      所有的对象都存在 ret 的data 属性里面</span><br><span class="line">     <span class="comment">// 注意data属性是固定的用法，用于获取后台的实际数据</span></span><br><span class="line">     <span class="comment">// console.log(ret.data)</span></span><br><span class="line">     <span class="built_in">console</span>.log(ret)</span><br><span class="line">   &#125;)</span><br><span class="line"># <span class="number">2.</span>  get 请求传递参数</span><br><span class="line">   # <span class="number">2.1</span>  通过传统的url  以 ? 的形式传递参数</span><br><span class="line">axios.get(<span class="string">&#x27;http://localhost:3000/axios?id=123&#x27;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line">   # <span class="number">2.2</span>  restful 形式传递参数 </span><br><span class="line">   axios.get(<span class="string">&#x27;http://localhost:3000/axios/123&#x27;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line"># <span class="number">2.3</span>  通过params  形式传递参数 </span><br><span class="line">   axios.get(<span class="string">&#x27;http://localhost:3000/axios&#x27;</span>, &#123;</span><br><span class="line">     <span class="attr">params</span>: &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">789</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line">#<span class="number">3</span> axios <span class="keyword">delete</span> 请求传参     传参的形式和 get 请求一样</span><br><span class="line">   axios.delete(<span class="string">&#x27;http://localhost:3000/axios&#x27;</span>, &#123;</span><br><span class="line">     <span class="attr">params</span>: &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">111</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line"># <span class="number">4</span>  axios 的 post 请求</span><br><span class="line">   # <span class="number">4.1</span>  通过选项传递参数</span><br><span class="line">   axios.post(<span class="string">&#x27;http://localhost:3000/axios&#x27;</span>, &#123;</span><br><span class="line">     <span class="attr">uname</span>: <span class="string">&#x27;lisi&#x27;</span>,</span><br><span class="line">     <span class="attr">pwd</span>: <span class="number">123</span></span><br><span class="line">   &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line"># <span class="number">4.2</span>  通过 URLSearchParams  传递参数 </span><br><span class="line">   <span class="keyword">var</span> params = <span class="keyword">new</span> URLSearchParams();</span><br><span class="line">   params.append(<span class="string">&#x27;uname&#x27;</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line">   params.append(<span class="string">&#x27;pwd&#x27;</span>, <span class="string">&#x27;111&#x27;</span>);</span><br><span class="line">   axios.post(<span class="string">&#x27;http://localhost:3000/axios&#x27;</span>, params).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">#<span class="number">5</span>  axios put 请求传参   和 post 请求一样 </span><br><span class="line">   axios.put(<span class="string">&#x27;http://localhost:3000/axios/123&#x27;</span>, &#123;</span><br><span class="line">     <span class="attr">uname</span>: <span class="string">&#x27;lisi&#x27;</span>,</span><br><span class="line">     <span class="attr">pwd</span>: <span class="number">123</span></span><br><span class="line">   &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="axios-全局配置"><a href="#axios-全局配置" class="headerlink" title="axios 全局配置"></a>axios 全局配置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#  配置公共的请求头 </span><br><span class="line">axios.defaults.baseURL = <span class="string">&#x27;https://api.example.com&#x27;</span>;</span><br><span class="line">#  配置 超时时间</span><br><span class="line">axios.defaults.timeout = <span class="number">2500</span>;</span><br><span class="line">#  配置公共的请求头</span><br><span class="line">axios.defaults.headers.common[<span class="string">&#x27;Authorization&#x27;</span>] = AUTH_TOKEN;</span><br><span class="line"># 配置公共的 post 的 Content-Type</span><br><span class="line">axios.defaults.headers.post[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="axios-拦截器"><a href="#axios-拦截器" class="headerlink" title="axios 拦截器"></a>axios 拦截器</h4><ul><li>请求拦截器<ul><li>请求拦截器的作用是在请求发送前进行一些操作<ul><li>例如在每个请求体里加上token，统一做了处理如果以后要改也非常容易</li></ul></li></ul></li><li>响应拦截器<ul><li>响应拦截器的作用是在接收到响应后进行一些操作<ul><li>例如在服务器返回登录状态失效，需要重新登录的时候，跳转到登录页</li></ul></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1.</span> 请求拦截器 </span><br><span class="line">axios.interceptors.request.use(<span class="function"><span class="keyword">function</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(config.url)</span><br><span class="line">     # <span class="number">1.1</span>  任何请求都会经过这一步   在发送请求之前做些什么   </span><br><span class="line">     config.headers.mytoken = <span class="string">&#x27;nihao&#x27;</span>;</span><br><span class="line">     # <span class="number">1.2</span>  这里一定要<span class="keyword">return</span>   否则配置不成功  </span><br><span class="line">     <span class="keyword">return</span> config;</span><br><span class="line">   &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">      #<span class="number">1.3</span> 对请求错误做点什么    </span><br><span class="line">     <span class="built_in">console</span>.log(err)</span><br><span class="line">   &#125;)</span><br><span class="line">#<span class="number">2.</span> 响应拦截器 </span><br><span class="line">   axios.interceptors.response.use(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">     #<span class="number">2.1</span>  在接收响应做些什么  </span><br><span class="line">     <span class="keyword">var</span> data = res.data;</span><br><span class="line">     <span class="keyword">return</span> data;</span><br><span class="line">   &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">     #<span class="number">2.2</span> 对响应错误做点什么  </span><br><span class="line">     <span class="built_in">console</span>.log(err)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><h3 id="async-和-await"><a href="#async-和-await" class="headerlink" title="async  和 await"></a>async  和 await</h3><ul><li>async作为一个关键字放到函数前面<ul><li>任何一个<code>async</code>函数都会隐式返回一个<code>promise</code></li></ul></li><li><code>await</code>关键字只能在使用<code>async</code>定义的函数中使用<ul><li>​    await后面可以直接跟一个 Promise实例对象</li><li>​     await函数不能单独使用</li></ul></li><li><strong>async/await 让异步代码看起来、表现起来更像同步代码</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1.</span>  <span class="keyword">async</span> 基础用法</span><br><span class="line">   # <span class="number">1.1</span> <span class="keyword">async</span>作为一个关键字放到函数前面</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">queryData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     # <span class="number">1.2</span> <span class="keyword">await</span>关键字只能在使用<span class="keyword">async</span>定义的函数中使用      <span class="keyword">await</span>后面可以直接跟一个 <span class="built_in">Promise</span>实例对象</span><br><span class="line">     <span class="keyword">var</span> ret = <span class="keyword">await</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">       <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         resolve(<span class="string">&#x27;nihao&#x27;</span>)</span><br><span class="line">       &#125;,<span class="number">1000</span>);</span><br><span class="line">     &#125;)</span><br><span class="line">     <span class="comment">// console.log(ret.data)</span></span><br><span class="line">     <span class="keyword">return</span> ret;</span><br><span class="line">   &#125;</span><br><span class="line"># <span class="number">1.3</span> 任何一个<span class="keyword">async</span>函数都会隐式返回一个promise   我们可以使用then 进行链式编程</span><br><span class="line">   queryData().then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(data)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">#<span class="number">2.</span>  <span class="keyword">async</span>    函数处理多个异步函数</span><br><span class="line">   axios.defaults.baseURL = <span class="string">&#x27;http://localhost:3000&#x27;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">queryData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     # <span class="number">2.1</span>  添加<span class="keyword">await</span>之后 当前的<span class="keyword">await</span> 返回结果之后才会执行后面的代码   </span><br><span class="line">     </span><br><span class="line">     <span class="keyword">var</span> info = <span class="keyword">await</span> axios.get(<span class="string">&#x27;async1&#x27;</span>);</span><br><span class="line">     #<span class="number">2.2</span>  让异步代码看起来、表现起来更像同步代码</span><br><span class="line">     <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.get(<span class="string">&#x27;async2?info=&#x27;</span> + info.data);</span><br><span class="line">     <span class="keyword">return</span> ret.data;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   queryData().then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(data)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><h3 id="图书列表案例"><a href="#图书列表案例" class="headerlink" title="图书列表案例"></a>图书列表案例</h3><h4 id="1-基于接口案例-获取图书列表"><a href="#1-基于接口案例-获取图书列表" class="headerlink" title="1. 基于接口案例-获取图书列表"></a>1. 基于接口案例-获取图书列表</h4><ul><li>导入axios   用来发送ajax </li><li>把获取到的数据渲染到页面上 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">th</span>&gt;</span>时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- 5.  把books  中的数据渲染到页面上   --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">tr</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in books&#x27;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">1.  导入axios   </span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">       /*</span><br><span class="line">            图书管理-添加图书</span><br><span class="line">        */</span><br><span class="line">       # 2   配置公共的url地址  简化后面的调用方式</span><br><span class="line">       axios.defaults.baseURL = &#x27;http://localhost:3000/&#x27;;</span><br><span class="line">       axios.interceptors.response.use(function(res) &#123;</span><br><span class="line">           return res.data;</span><br><span class="line">       &#125;, function(error) &#123;</span><br><span class="line">           console.log(error)</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       var vm = new Vue(&#123;</span><br><span class="line">           el: &#x27;#app&#x27;,</span><br><span class="line">           data: &#123;</span><br><span class="line">               flag: false,</span><br><span class="line">               submitFlag: false,</span><br><span class="line">               id: &#x27;&#x27;,</span><br><span class="line">               name: &#x27;&#x27;,</span><br><span class="line">               books: []</span><br><span class="line">           &#125;,</span><br><span class="line">           methods: &#123;</span><br><span class="line">               # 3 定义一个方法 用来发送 ajax </span><br><span class="line">               # 3.1  使用 async  来 让异步的代码  以同步的形式书写 </span><br><span class="line">               queryData: async function() &#123;</span><br><span class="line">                   // 调用后台接口获取图书列表数据</span><br><span class="line">                   // var ret = await axios.get(&#x27;books&#x27;);</span><br><span class="line">                   // this.books = ret.data;</span><br><span class="line"># 3.2  发送ajax请求  把拿到的数据放在books 里面   </span><br><span class="line">                   this.books = await axios.get(&#x27;books&#x27;);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;,</span><br><span class="line"></span><br><span class="line">           mounted: function() &#123;</span><br><span class="line">#  4 mounted  里面 DOM已经加载完毕  在这里调用函数  </span><br><span class="line">               this.queryData();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-添加图书"><a href="#2-添加图书" class="headerlink" title="2   添加图书"></a>2   添加图书</h4><ul><li>获取用户输入的数据   发送到后台</li><li>渲染最新的数据到页面上</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">   <span class="attr">handle</span>: <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(<span class="built_in">this</span>.flag) &#123;</span><br><span class="line">           <span class="comment">// 编辑图书</span></span><br><span class="line">           <span class="comment">// 就是根据当前的ID去更新数组中对应的数据</span></span><br><span class="line">           <span class="built_in">this</span>.books.some(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">             <span class="keyword">if</span>(item.id == <span class="built_in">this</span>.id) &#123;</span><br><span class="line">               item.name = <span class="built_in">this</span>.name;</span><br><span class="line">               <span class="comment">// 完成更新操作之后，需要终止循环</span></span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           # <span class="number">1.1</span>  在前面封装好的 handle 方法中  发送ajax请求  </span><br><span class="line">           # <span class="number">1.2</span>  使用<span class="keyword">async</span>  和 <span class="keyword">await</span> 简化操作 需要在 <span class="function"><span class="keyword">function</span> 前面添加 <span class="title">async</span>   </span></span><br><span class="line"><span class="function">           <span class="title">var</span> <span class="title">ret</span> = <span class="title">await</span> <span class="title">axios</span>.<span class="title">post</span>(<span class="params"><span class="string">&#x27;books&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="params"><span class="function">             name: <span class="built_in">this</span>.name</span></span></span><br><span class="line"><span class="params"><span class="function">           &#125;</span>)</span></span><br><span class="line"><span class="function">           # 1.3  根据后台返回的状态码判断是否加载数据 </span></span><br><span class="line"><span class="function">           <span class="title">if</span>(<span class="params">ret.status == <span class="number">200</span></span>) </span>&#123;</span><br><span class="line">            # <span class="number">1.4</span>  调用 queryData 这个方法  渲染最新的数据 </span><br><span class="line">             <span class="built_in">this</span>.queryData();</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">// 清空表单</span></span><br><span class="line">         <span class="built_in">this</span>.id = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">         <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">       &#125;,        </span><br><span class="line">&#125;         </span><br></pre></td></tr></table></figure><h4 id="3-验证图书名称是否存在"><a href="#3-验证图书名称是否存在" class="headerlink" title="3  验证图书名称是否存在"></a>3  验证图书名称是否存在</h4><ul><li>添加图书之前发送请求验证图示是否已经存在</li><li>如果不存在 往后台里面添加图书名称<ul><li>图书存在与否只需要修改submitFlag的值即可</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> watch: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 验证图书名称是否已经存在</span></span><br><span class="line">          <span class="comment">// var flag = this.books.some(function(item)&#123;</span></span><br><span class="line">          <span class="comment">//   return item.name == val;</span></span><br><span class="line">          <span class="comment">// &#125;);</span></span><br><span class="line">          <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.get(<span class="string">&#x27;/books/book/&#x27;</span> + <span class="built_in">this</span>.name);</span><br><span class="line">          <span class="keyword">if</span>(ret.status == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 图书名称存在</span></span><br><span class="line">            <span class="built_in">this</span>.submitFlag = <span class="literal">true</span>;</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 图书名称不存在</span></span><br><span class="line">            <span class="built_in">this</span>.submitFlag = <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="4-编辑图书"><a href="#4-编辑图书" class="headerlink" title="4.  编辑图书"></a>4.  编辑图书</h4><ul><li>根据当前书的id 查询需要编辑的书籍</li><li>需要根据状态位判断是添加还是编辑 </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">       <span class="attr">handle</span>: <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(<span class="built_in">this</span>.flag) &#123;</span><br><span class="line">           #<span class="number">4.3</span> 编辑图书   把用户输入的信息提交到后台</span><br><span class="line">           <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.put(<span class="string">&#x27;books/&#x27;</span> + <span class="built_in">this</span>.id, &#123;</span><br><span class="line">             <span class="attr">name</span>: <span class="built_in">this</span>.name</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="keyword">if</span>(ret.status == <span class="number">200</span>)&#123;</span><br><span class="line">             #<span class="number">4.4</span>  完成添加后 重新加载列表数据</span><br><span class="line">             <span class="built_in">this</span>.queryData();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="comment">// 添加图书</span></span><br><span class="line">           <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.post(<span class="string">&#x27;books&#x27;</span>, &#123;</span><br><span class="line">             <span class="attr">name</span>: <span class="built_in">this</span>.name</span><br><span class="line">           &#125;)</span><br><span class="line">           <span class="keyword">if</span>(ret.status == <span class="number">200</span>) &#123;</span><br><span class="line">             <span class="comment">// 重新加载列表数据</span></span><br><span class="line">             <span class="built_in">this</span>.queryData();</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">// 清空表单</span></span><br><span class="line">         <span class="built_in">this</span>.id = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">         <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="attr">toEdit</span>: <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">         #<span class="number">4.1</span>  flag状态位用于区分编辑和添加操作</span><br><span class="line">         <span class="built_in">this</span>.flag = <span class="literal">true</span>;</span><br><span class="line">         #<span class="number">4.2</span>  根据id查询出对应的图书信息  页面中可以加载出来最新的信息</span><br><span class="line">         # 调用接口发送ajax 请求  </span><br><span class="line">         <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.get(<span class="string">&#x27;books/&#x27;</span> + id);</span><br><span class="line">         <span class="built_in">this</span>.id = ret.id;</span><br><span class="line">         <span class="built_in">this</span>.name = ret.name;</span><br><span class="line">       &#125;,</span><br></pre></td></tr></table></figure><h4 id="5-删除图书"><a href="#5-删除图书" class="headerlink" title="5 删除图书"></a>5 删除图书</h4><ul><li>把需要删除的id书籍 通过参数的形式传递到后台</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deleteBook: <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">       <span class="comment">// 删除图书</span></span><br><span class="line">       <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.delete(<span class="string">&#x27;books/&#x27;</span> + id);</span><br><span class="line">       <span class="keyword">if</span>(ret.status == <span class="number">200</span>) &#123;</span><br><span class="line">         <span class="comment">// 重新加载列表数据</span></span><br><span class="line">         <span class="built_in">this</span>.queryData();</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;接口调用方式&quot;&gt;&lt;a href=&quot;#接口调用方式&quot; class=&quot;headerlink&quot; title=&quot;接口调用方式&quot;&gt;&lt;/a&gt;接口调用方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;原生ajax&lt;/li&gt;
&lt;li&gt;基于jQuery的ajax&lt;/li&gt;
&lt;li&gt;fetch&lt;/li</summary>
      
    
    
    
    
    <category term="vue" scheme="https://www.lxy.zone/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue组件的使用总结</title>
    <link href="https://www.lxy.zone/2021/01/17/114_vue%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>https://www.lxy.zone/2021/01/17/114_vue%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-17T00:47:22.000Z</published>
    <updated>2022-01-21T03:59:28.010Z</updated>
    
    <content type="html"><![CDATA[<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><ul><li>组件 (Component) 是 Vue.js 最强大的功能之一</li><li>组件可以扩展 HTML 元素，封装可重用的代</li></ul><h3 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h3><h4 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h4><ul><li>Vue.component(‘组件名称’, { })     第1个参数是标签名称，第2个参数是一个选项对象</li><li><strong>全局组件</strong>注册后，任何<strong>vue实例</strong>都可以用</li></ul><h5 id="组件基础用"><a href="#组件基础用" class="headerlink" title="组件基础用"></a>组件基础用</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 2、 组件使用 组件名称 是以HTML标签的形式使用  --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">my-component</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   注册组件 </span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 1、 my-component 就是组件中自定义的标签名</span></span></span><br><span class="line"><span class="javascript">Vue.component(<span class="string">&#x27;my-component&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;A custom component!&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建根实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#example&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="组件注意事项"><a href="#组件注意事项" class="headerlink" title="组件注意事项"></a>组件注意事项</h5><ul><li>组件参数的data值必须是函数同时这个函数要求返回一个对象 </li><li>组件模板必须是单个根元素</li><li>组件模板的内容可以是模板字符串</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">4、  组件可以重复使用多次 </span></span><br><span class="line"><span class="comment">      因为data中返回的是一个对象所以每个组件中的数据是私有的</span></span><br><span class="line"><span class="comment">  即每个实例可以维护一份被返回对象的独立的拷贝   </span></span><br><span class="line"><span class="comment">--&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 8、必须使用短横线的方式使用组件 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hello-world</span>&gt;</span><span class="tag">&lt;/<span class="name">hello-world</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//5  如果使用驼峰式命名组件，那么在使用组件的时候，只能在字符串模板中用驼峰的方式使用组件，</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 7、但是在普通的标签模板中，必须使用短横线的方式使用组件</span></span></span><br><span class="line"><span class="javascript">     Vue.component(<span class="string">&#x27;HelloWorld&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">msg</span>: <span class="string">&#x27;HelloWorld&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 1、组件参数的data值必须是函数 </span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 同时这个函数要求返回一个对象  </span></span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">count</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="comment">//  2、组件模板必须是单个根元素</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//  3、组件模板的内容可以是模板字符串  </span></span></span><br><span class="line"><span class="javascript">      <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">        &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">          &lt;button @click=&quot;handle&quot;&gt;点击了&#123;&#123;count&#125;&#125;次&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">          &lt;button&gt;测试123&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">#  6 在字符串模板中可以使用驼峰的方式使用组件</span></span></span><br><span class="line"><span class="string"><span class="javascript">   &lt;HelloWorld&gt;&lt;/HelloWorld&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">      `</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.count += <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h4><ul><li>只能在当前注册它的vue实例中使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">my-component</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 定义组件的模板</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> Child = &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;A custom component!&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//局部注册组件  </span></span></span><br><span class="line"><span class="javascript">      <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// &lt;my-component&gt; 将只在父模板可用  一定要在实例上注册了才能在html文件中使用</span></span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;my-component&#x27;</span>: Child</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue组件之间传值"><a href="#Vue组件之间传值" class="headerlink" title="Vue组件之间传值"></a>Vue组件之间传值</h3><h4 id="父组件向子组件传值"><a href="#父组件向子组件传值" class="headerlink" title="父组件向子组件传值"></a>父组件向子组件传值</h4><ul><li>父组件发送的形式是以属性的形式绑定值到子组件身上。</li><li>然后子组件用属性props接收</li><li> 在props中使用驼峰形式，模板中需要使用短横线的形式字符串形式的模板中没有这个限制</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;pmsg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1、menu-item  在 APP中嵌套着 故 menu-item   为  子组件      --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 给子组件传入一个静态的值 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">menu-item</span> <span class="attr">title</span>=<span class="string">&#x27;来自父组件的值&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu-item</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 2、 需要动态的数据的时候 需要属性绑定的形式设置 此时 ptitle  来自父组件data 中的数据 . </span></span><br><span class="line"><span class="comment">  传的值可以是数字、对象、数组等等</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">menu-item</span> <span class="attr">:title</span>=<span class="string">&#x27;ptitle&#x27;</span> <span class="attr">content</span>=<span class="string">&#x27;hello&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu-item</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   Vue.component(<span class="string">&#x27;menu-item&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">     <span class="comment">// 3、 子组件用属性props接收父组件传递过来的数据  </span></span></span><br><span class="line"><span class="javascript">     <span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;content&#x27;</span>],</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">msg</span>: <span class="string">&#x27;子组件本身的数据&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&#123;&#123;msg + &quot;----&quot; + title + &quot;-----&quot; + content&#125;&#125;&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">pmsg</span>: <span class="string">&#x27;父组件中内容&#x27;</span>,</span></span><br><span class="line"><span class="javascript">       <span class="attr">ptitle</span>: <span class="string">&#x27;动态绑定属性&#x27;</span></span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="子组件向父组件传值"><a href="#子组件向父组件传值" class="headerlink" title="子组件向父组件传值"></a>子组件向父组件传值</h4><ul><li>子组件用<code>$emit()</code>触发事件</li><li><code>$emit()</code>  第一个参数为 自定义的事件名称     第二个参数为需要传递的数据</li><li>父组件用v-on 监听子组件的事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&#x27;&#123;fontSize: fontSize + &quot;px&quot;&#125;&#x27;</span>&gt;</span>&#123;&#123;pmsg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2 父组件用v-on 监听子组件的事件</span></span><br><span class="line"><span class="comment">这里 enlarge-text  是从 $emit 中的第一个参数对应   handle 为对应的事件处理函数</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">menu-item</span> <span class="attr">:parr</span>=<span class="string">&#x27;parr&#x27;</span> @<span class="attr">enlarge-text</span>=<span class="string">&#x27;handle($event)&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu-item</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   /*</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     子组件向父组件传值-携带参数</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   */</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   Vue.component(&#x27;menu-item&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     props: [&#x27;parr&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">li</span> <span class="attr">:key</span>=<span class="string">&#x27;index&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;(item,index) in parr&#x27;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">###  1、子组件用$emit()触发事件</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">### 第一个参数为 自定义的事件名称   第二个参数为需要传递的数据  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;$emit(&quot;enlarge-text&quot;, 5)&#x27;</span>&gt;</span>扩大父组件中字体大小<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;$emit(&quot;enlarge-text&quot;, 10)&#x27;</span>&gt;</span>扩大父组件中字体大小<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       pmsg: &#x27;父组件中内容&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       parr: [&#x27;apple&#x27;,&#x27;orange&#x27;,&#x27;banana&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       fontSize: 10</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       handle: function(val)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         // 扩大字体大小</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.fontSize += val;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"> </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="兄弟之间的传递"><a href="#兄弟之间的传递" class="headerlink" title="兄弟之间的传递"></a>兄弟之间的传递</h4><ul><li>兄弟之间传递数据需要借助于事件中心，通过事件中心传递数据   <ul><li>提供事件中心    var hub = new Vue()</li></ul></li><li>传递数据方，通过一个事件触发hub.$emit(方法名，传递的数据)</li><li>接收数据方，通过mounted(){} 钩子中  触发hub.$on()方法名</li><li>销毁事件 通过hub.$off()方法名销毁之后无法进行传递数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;handle&#x27;</span>&gt;</span>销毁事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">test-tom</span>&gt;</span><span class="tag">&lt;/<span class="name">test-tom</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">test-jerry</span>&gt;</span><span class="tag">&lt;/<span class="name">test-jerry</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     兄弟组件之间数据传递</span></span></span><br><span class="line"><span class="comment"><span class="javascript">   */</span></span></span><br><span class="line"><span class="javascript">   <span class="comment">//1、 提供事件中心</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> hub = <span class="keyword">new</span> Vue();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">   Vue.component(<span class="string">&#x27;test-tom&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">num</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">       &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">         &lt;div&gt;TOM:&#123;&#123;num&#125;&#125;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">         &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">           &lt;button @click=&#x27;handle&#x27;&gt;点击&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">         &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">       &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">     `</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//2、传递数据方，通过一个事件触发hub.$emit(方法名，传递的数据)   触发兄弟组件的事件</span></span></span><br><span class="line"><span class="javascript">         hub.$emit(<span class="string">&#x27;jerry-event&#x27;</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">mounted</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 3、接收数据方，通过mounted()&#123;&#125; 钩子中  触发hub.$on(方法名</span></span></span><br><span class="line"><span class="javascript">       hub.$on(<span class="string">&#x27;tom-event&#x27;</span>, <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.num += val;</span></span><br><span class="line"><span class="javascript">       &#125;);</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript">   Vue.component(<span class="string">&#x27;test-jerry&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">num</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">       &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">         &lt;div&gt;JERRY:&#123;&#123;num&#125;&#125;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">         &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">           &lt;button @click=&#x27;handle&#x27;&gt;点击&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">         &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">       &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">     `</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//2、传递数据方，通过一个事件触发hub.$emit(方法名，传递的数据)   触发兄弟组件的事件</span></span></span><br><span class="line"><span class="javascript">         hub.$emit(<span class="string">&#x27;tom-event&#x27;</span>, <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">mounted</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="comment">// 3、接收数据方，通过mounted()&#123;&#125; 钩子中  触发hub.$on()方法名</span></span></span><br><span class="line"><span class="javascript">       hub.$on(<span class="string">&#x27;jerry-event&#x27;</span>, <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.num += val;</span></span><br><span class="line"><span class="javascript">       &#125;);</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">       </span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//4、销毁事件 通过hub.$off()方法名销毁之后无法进行传递数据  </span></span></span><br><span class="line"><span class="javascript">         hub.$off(<span class="string">&#x27;tom-event&#x27;</span>);</span></span><br><span class="line"><span class="javascript">         hub.$off(<span class="string">&#x27;jerry-event&#x27;</span>);</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="组件插槽"><a href="#组件插槽" class="headerlink" title="组件插槽"></a>组件插槽</h3><ul><li>组件的最大特性就是复用性，而用好插槽能大大提高组件的可复用能力</li></ul><h4 id="匿名插槽"><a href="#匿名插槽" class="headerlink" title="匿名插槽"></a>匿名插槽</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里的所有组件标签中嵌套的内容会替换掉slot  如果不传值 则使用 slot 中的默认值  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">alert-box</span>&gt;</span>有bug发生<span class="tag">&lt;/<span class="name">alert-box</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alert-box</span>&gt;</span>有一个警告<span class="tag">&lt;/<span class="name">alert-box</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alert-box</span>&gt;</span><span class="tag">&lt;/<span class="name">alert-box</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    /*</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      组件插槽：父组件向子组件传递内容</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    */</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&#x27;alert-box&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">strong</span>&gt;</span>ERROR:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 当组件渲染的时候，这个 <span class="tag">&lt;<span class="name">slot</span>&gt;</span> 元素将会被替换为“组件标签中嵌套的内容”。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 插槽内可以包含任何模板代码，包括 HTML</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">slot</span>&gt;</span>默认内容<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h4><ul><li>具有名字的插槽 </li><li>使用 <slot> 中的 “name” 属性绑定元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 2、 通过slot属性来指定, 这个slot的值必须和下面slot组件得name值对应上</span></span><br><span class="line"><span class="comment">如果没有匹配到 则放到匿名的插槽中   --&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">slot</span>=<span class="string">&#x27;header&#x27;</span>&gt;</span>标题信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>主要内容1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>主要内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">slot</span>=<span class="string">&#x27;footer&#x27;</span>&gt;</span>底部信息信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 注意点：template临时的包裹标签最终不会渲染到页面上     --&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&#x27;header&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>标题信息1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>标题信息2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>主要内容1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>主要内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&#x27;footer&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>底部信息信息1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>底部信息信息2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    /*</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      具名插槽</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    */</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&#x27;base-layout&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">header</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">###1、 使用 <span class="tag">&lt;<span class="name">slot</span>&gt;</span> 中的 &quot;name&quot; 属性绑定元素 指定当前插槽的名字</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;header&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">main</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">###  注意点： </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">###  具名插槽的渲染顺序，完全取决于模板，而不是取决于父组件中元素的顺序</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;footer&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h4><ul><li>父组件对子组件加工处理</li><li>既可以复用子组件的slot，又可以使slot内容不一致</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">1、当我们希望li 的样式由外部使用组件的地方定义，因为可能有多种地方要使用该组件，</span></span><br><span class="line"><span class="comment">但样式希望不一样 这个时候我们需要使用作用域插槽 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">fruit-list</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 2、 父组件中使用了&lt;template&gt;元素,而且包含scope=&quot;slotProps&quot;,</span></span><br><span class="line"><span class="comment">slotProps在这里只是临时变量   </span></span><br><span class="line"><span class="comment">---&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&#x27;slotProps&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">v-if</span>=<span class="string">&#x27;slotProps.info.id==3&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;slotProps.info.name&#125;&#125;         </span><br><span class="line">         <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>&#123;&#123;slotProps.info.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fruit-list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    /*</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      作用域插槽</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    */</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&#x27;fruit-list&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in list&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">###  3、 在子组件模板中,<span class="tag">&lt;<span class="name">slot</span>&gt;</span>元素上有一个类似props传递数据给组件的写法msg=&quot;xxx&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">###   插槽可以提供一个默认内容，如果如果父组件没有为这个插槽提供了内容，会显示默认的内容。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">如果父组件为这个插槽提供了内容，则默认的内容会被替换掉</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:info</span>=<span class="string">&#x27;item&#x27;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item.name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        list: [&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          id: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          name: &#x27;apple&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          id: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          name: &#x27;orange&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          id: 3,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          name: &#x27;banana&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;]</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="购物车案例"><a href="#购物车案例" class="headerlink" title="购物车案例"></a>购物车案例</h3><h4 id="1-实现组件化布局"><a href="#1-实现组件化布局" class="headerlink" title="1.  实现组件化布局"></a>1.  实现组件化布局</h4><ul><li>把静态页面转换成组件化模式</li><li>把组件渲染到页面上</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 2、把组件渲染到页面上 --&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">my-cart</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cart</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   # 1、 把静态页面转换成组件化模式</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   # 1.1  标题组件 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartTitle = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>我的商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   # 1.2  商品列表组件 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartList = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     #  注意点 ：  组件模板必须是单个根元素  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/a.jpg&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/b.jpg&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/c.jpg&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/d.jpg&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/e.jpg&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   # 1.3  商品结算组件 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartTotal = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价：123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">button</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   ## 1.4  定义一个全局组件 my-cart</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   Vue.component(&#x27;my-cart&#x27;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     ##  1.6 引入子组件  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;cart&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-title</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-title</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-list</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-list</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-total</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-total</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     # 1.5  注册子组件   </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-title&#x27;: CartTitle,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-list&#x27;: CartList,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-total&#x27;: CartTotal</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"> </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2、实现-标题和结算功能组件"><a href="#2、实现-标题和结算功能组件" class="headerlink" title="2、实现 标题和结算功能组件"></a>2、实现 标题和结算功能组件</h4><ul><li>标题组件实现动态渲染<ul><li>从父组件把标题数据传递过来 即 父向子组件传值</li><li>把传递过来的数据渲染到页面上  </li></ul></li><li>结算功能组件<ul><li>从父组件把商品列表list 数据传递过来 即 父向子组件传值</li><li>把传递过来的数据计算最终价格渲染到页面上  </li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">my-cart</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cart</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    # 2.2  标题组件     子组件通过props形式接收父组件传递过来的uname数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartTitle = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     props: [&#x27;uname&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">uname</span>&#125;&#125;</span><span class="xml">的商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 2.3  商品结算组件  子组件通过props形式接收父组件传递过来的list数据   </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartTotal = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价：</span><span class="template-variable">&#123;&#123;<span class="name">total</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">button</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     computed: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       # 2.4    计算商品的总价  并渲染到页面上 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       total: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         var t = 0;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.list.forEach(item =&gt; &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           t += item.price * item.num;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         return t;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   Vue.component(&#x27;my-cart&#x27;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     data: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         uname: &#x27;张三&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         list: [&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           name: &#x27;TCL彩电&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           img: &#x27;img/a.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           name: &#x27;机顶盒&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           img: &#x27;img/b.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: 3,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           name: &#x27;海尔冰箱&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           img: &#x27;img/c.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: 4,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           name: &#x27;小米手机&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           img: &#x27;img/d.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: 5,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           name: &#x27;PPTV电视&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           img: &#x27;img/e.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;]</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     #  2.1  父组件向子组件以属性传递的形式 传递数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     #   向 标题组件传递 uname 属性   向 商品结算组件传递 list  属性  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;cart&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-title</span> <span class="attr">:uname</span>=<span class="string">&#x27;uname&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-title</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-list</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-list</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-total</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-total</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-title&#x27;: CartTitle,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-list&#x27;: CartList,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-total&#x27;: CartTotal</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"> </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-实现列表组件删除功能"><a href="#3-实现列表组件删除功能" class="headerlink" title="3.  实现列表组件删除功能"></a>3.  实现列表组件删除功能</h4><ul><li>从父组件把商品列表list 数据传递过来 即 父向子组件传值</li><li>把传递过来的数据渲染到页面上    </li><li>点击删除按钮的时候删除对应的数据 <ul><li>给按钮添加点击事件把需要删除的id传递过来  <ul><li>子组件中不推荐操作父组件的数据有可能多个子组件使用父组件的数据  我们需要把数据传递给父组件让父组件操作数据 </li><li>父组件删除对应的数据</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">my-cart</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cart</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var CartTitle = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;uname&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">uname</span>&#125;&#125;</span><span class="xml">的商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    #  3.2 把列表数据动态渲染到页面上  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var CartList = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in list&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item.name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 3.3  给按钮添加点击事件把需要删除的id传递过来</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span> @<span class="attr">click</span>=<span class="string">&#x27;del(item.id)&#x27;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        del: function(id)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           # 3.4 子组件中不推荐操作父组件的数据有可能多个子组件使用父组件的数据 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          #   我们需要把数据传递给父组件 让父组件操作数据 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.$emit(&#x27;cart-del&#x27;, id);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var CartTotal = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价：</span><span class="template-variable">&#123;&#123;<span class="name">total</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      computed: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        total: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          // 计算商品的总价</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          var t = 0;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.list.forEach(item =&gt; &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            t += item.price * item.num;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          return t;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&#x27;my-cart&#x27;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          uname: &#x27;张三&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          list: [&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;TCL彩电&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/a.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;机顶盒&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/b.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 3,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;海尔冰箱&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/c.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 4,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;小米手机&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/d.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 5,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;PPTV电视&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/e.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;]</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      # 3.1 从父组件把商品列表list 数据传递过来 即 父向子组件传值  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;cart&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">cart-title</span> <span class="attr">:uname</span>=<span class="string">&#x27;uname&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-title</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  #  3.5  父组件通过事件绑定 接收子组件传递过来的数据 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">cart-list</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span> @<span class="attr">cart-del</span>=<span class="string">&#x27;delCart($event)&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-list</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">cart-total</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-total</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#x27;cart-title&#x27;: CartTitle,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#x27;cart-list&#x27;: CartList,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#x27;cart-total&#x27;: CartTotal</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        # 3.6    根据id删除list中对应的数据        </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        delCart: function(id) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          // 1、找到id所对应数据的索引</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          var index = this.list.findIndex(item=&gt;&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            return item.id == id;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          // 2、根据索引删除对应数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.list.splice(index, 1);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-实现组件更新数据功能-上"><a href="#4-实现组件更新数据功能-上" class="headerlink" title="4.   实现组件更新数据功能  上"></a>4.   实现组件更新数据功能  上</h4><ul><li>将输入框中的默认数据动态渲染出来</li><li>输入框失去焦点的时候 更改商品的数量 </li><li>   子组件中不推荐操作数据 把这些数据传递给父组件 让父组件处理这些数据</li><li><pre><code>父组件中接收子组件传递过来的数据并处理 </code></pre></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">my-cart</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cart</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartTitle = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     props: [&#x27;uname&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">uname</span>&#125;&#125;</span><span class="xml">的商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartList = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in list&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item.name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 1. 将输入框中的默认数据动态渲染出来</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 2. 输入框失去焦点的时候 更改商品的数量  需要将当前商品的id 传递过来</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> <span class="attr">:value</span>=<span class="string">&#x27;item.num&#x27;</span> @<span class="attr">blur</span>=<span class="string">&#x27;changeNum(item.id, $event)&#x27;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span> @<span class="attr">click</span>=<span class="string">&#x27;del(item.id)&#x27;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       changeNum: function(id, event)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         # 3 子组件中不推荐操作数据  因为别的组件可能也引用了这些数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         #  把这些数据传递给父组件 让父组件处理这些数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.$emit(&#x27;change-num&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: id,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: event.target.value</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       del: function(id)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         // 把id传递给父组件</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.$emit(&#x27;cart-del&#x27;, id);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var CartTotal = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价：</span><span class="template-variable">&#123;&#123;<span class="name">total</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">button</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     computed: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       total: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         // 计算商品的总价</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         var t = 0;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.list.forEach(item =&gt; &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           t += item.price * item.num;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         return t;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   Vue.component(&#x27;my-cart&#x27;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     data: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         uname: &#x27;张三&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         list: [&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           id: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           name: &#x27;TCL彩电&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           img: &#x27;img/a.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;]</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;cart&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-title</span> <span class="attr">:uname</span>=<span class="string">&#x27;uname&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-title</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 4  父组件中接收子组件传递过来的数据 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-list</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span> @<span class="attr">change-num</span>=<span class="string">&#x27;changeNum($event)&#x27;</span> @<span class="attr">cart-del</span>=<span class="string">&#x27;delCart($event)&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-list</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">cart-total</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-total</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-title&#x27;: CartTitle,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-list&#x27;: CartList,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#x27;cart-total&#x27;: CartTotal</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       changeNum: function(val) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         //4.1 根据子组件传递过来的数据，跟新list中对应的数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.list.some(item=&gt;&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           if(item.id == val.id) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             item.num = val.num;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             // 终止遍历</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             return true;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       delCart: function(id) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         // 根据id删除list中对应的数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         // 1、找到id所对应数据的索引</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         var index = this.list.findIndex(item=&gt;&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           return item.id == id;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         // 2、根据索引删除对应数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         this.list.splice(index, 1);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">       &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">   &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"> </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-实现组件更新数据功能-下"><a href="#5-实现组件更新数据功能-下" class="headerlink" title="5. 实现组件更新数据功能  下"></a>5. 实现组件更新数据功能  下</h4><ul><li>子组件通过一个标识符来标记对用的用户点击  + - 或者输入框输入的内容</li><li>父组件拿到标识符更新对应的组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.cart</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">      <span class="comment">/*color: #fff;*/</span>  </span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.total</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#FFCE46</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.total</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#DC4C40</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">border</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.total</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">      <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">55px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">line-height</span>: <span class="number">55px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">      <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#ADD8E6</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">45px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">45px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.name</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">top</span>: <span class="number">0</span>;<span class="attribute">left</span>: <span class="number">55px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.change</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">right</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.change</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-decoration</span>:none;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: lightgray;</span></span><br><span class="line"><span class="css">      <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.change</span> <span class="selector-class">.num</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.del</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">right</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">      <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">      <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.del</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">my-cart</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cart</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var CartTitle = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;uname&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">uname</span>&#125;&#125;</span><span class="xml">的商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var CartList = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in list&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item.name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  # 1.  + - 按钮绑定事件 </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;sub(item.id)&#x27;</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span> <span class="attr">:value</span>=<span class="string">&#x27;item.num&#x27;</span> @<span class="attr">blur</span>=<span class="string">&#x27;changeNum(item.id, $event)&#x27;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;add(item.id)&#x27;</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span> @<span class="attr">click</span>=<span class="string">&#x27;del(item.id)&#x27;</span>&gt;</span>×<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        changeNum: function(id, event)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.$emit(&#x27;change-num&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: id,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            type: &#x27;change&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: event.target.value</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        sub: function(id)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          # 2 数量的增加和减少通过父组件来计算   每次都是加1 和 减1 不需要传递数量   父组件需要一个类型来判断 是 加一 还是减1  以及是输入框输入的数据  我们通过type 标识符来标记 不同的操作   </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.$emit(&#x27;change-num&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: id,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            type: &#x27;sub&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        add: function(id)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         # 2 数量的增加和减少通过父组件来计算   每次都是加1 和 减1 不需要传递数量   父组件需要一个类型来判断 是 加一 还是减1  以及是输入框输入的数据  我们通过type 标识符来标记 不同的操作</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.$emit(&#x27;change-num&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: id,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            type: &#x27;add&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        del: function(id)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          // 把id传递给父组件</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.$emit(&#x27;cart-del&#x27;, id);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var CartTotal = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      props: [&#x27;list&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价：</span><span class="template-variable">&#123;&#123;<span class="name">total</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      computed: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        total: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          // 计算商品的总价</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          var t = 0;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          this.list.forEach(item =&gt; &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            t += item.price * item.num;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          return t;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&#x27;my-cart&#x27;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: function() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          uname: &#x27;张三&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          list: [&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;TCL彩电&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/a.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;机顶盒&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/b.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 3,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;海尔冰箱&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/c.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 4,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;小米手机&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 1,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/d.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;,&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            id: 5,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;PPTV电视&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            price: 1000,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            num: 2,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            img: &#x27;img/e.jpg&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;]</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;cart&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">cart-title</span> <span class="attr">:uname</span>=<span class="string">&#x27;uname&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-title</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"># 3 父组件通过事件监听   接收子组件的数据  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">cart-list</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span> @<span class="attr">change-num</span>=<span class="string">&#x27;changeNum($event)&#x27;</span> @<span class="attr">cart-del</span>=<span class="string">&#x27;delCart($event)&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-list</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          <span class="tag">&lt;<span class="name">cart-total</span> <span class="attr">:list</span>=<span class="string">&#x27;list&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-total</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      `,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#x27;cart-title&#x27;: CartTitle,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#x27;cart-list&#x27;: CartList,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#x27;cart-total&#x27;: CartTotal</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        changeNum: function(val) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          #4 分为三种情况：输入框变更、加号变更、减号变更</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          if(val.type==&#x27;change&#x27;) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            // 根据子组件传递过来的数据，跟新list中对应的数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            this.list.some(item=&gt;&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              if(item.id == val.id) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                item.num = val.num;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                // 终止遍历</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return true;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;else if(val.type==&#x27;sub&#x27;)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            // 减一操作</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            this.list.some(item=&gt;&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              if(item.id == val.id) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                item.num -= 1;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                // 终止遍历</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return true;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;else if(val.type==&#x27;add&#x27;)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            // 加一操作</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            this.list.some(item=&gt;&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              if(item.id == val.id) &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                item.num += 1;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                // 终止遍历</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return true;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">              &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">          &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">      &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;组件 (Component) 是 Vue.js 最强大的功能之一&lt;/li&gt;
&lt;li&gt;组件可以扩展 HTML 元素，封装可重用的代</summary>
      
    
    
    
    
    <category term="vue" scheme="https://www.lxy.zone/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的常用特性总结</title>
    <link href="https://www.lxy.zone/2021/01/16/113_Vue%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93/"/>
    <id>https://www.lxy.zone/2021/01/16/113_Vue%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-16T02:40:15.000Z</published>
    <updated>2022-01-21T03:59:34.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="表单基本操作"><a href="#表单基本操作" class="headerlink" title="表单基本操作"></a>表单基本操作</h2><ul><li><p>获取单选框中的值</p><ul><li>通过v-model</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">1、 两个单选框需要同时通过v-model 双向绑定 一个值 </span></span><br><span class="line"><span class="comment">        2、 每一个单选框必须要有value属性  且value 值不能一样 </span></span><br><span class="line"><span class="comment">3、 当某一个单选框选中的时候 v-model  会将当前的 value值 改变 data 中的 数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">gender 的值就是选中的值，我们只需要实时监控他的值就可以了</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;gender&#x27;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;gender&#x27;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 默认会让当前的 value 值为 2 的单选框选中</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">gender</span>: <span class="number">2</span>,  </span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>获取复选框中的值</p><ul><li>通过v-model</li><li>和获取单选框中的值一样 </li><li>复选框 <code>checkbox</code> 这种的组合时   data 中的 hobby 我们要定义成数组 否则无法实现多选</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">1、 复选框需要同时通过v-model 双向绑定 一个值 </span></span><br><span class="line"><span class="comment">        2、 每一个复选框必须要有value属性  且value 值不能一样 </span></span><br><span class="line"><span class="comment">3、 当某一个单选框选中的时候 v-model  会将当前的 value值 改变 data 中的 数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">hobby 的值就是选中的值，我们只需要实时监控他的值就可以了</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ball&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;hobby&#x27;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;ball&quot;</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sing&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;hobby&#x27;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sing&quot;</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;hobby&#x27;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;code&quot;</span>&gt;</span>写代码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 默认会让当前的 value 值为 2 和 3 的复选框选中</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">hobby</span>: [<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>],</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>获取下拉框和文本框中的值</p><ul><li>通过v-model</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>职业：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、 需要给select  通过v-model 双向绑定 一个值 </span></span><br><span class="line"><span class="comment">            2、 每一个option  必须要有value属性  且value 值不能一样 </span></span><br><span class="line"><span class="comment">    3、 当某一个option选中的时候 v-model  会将当前的 value值 改变 data 中的 数据</span></span><br><span class="line"><span class="comment">     occupation 的值就是选中的值，我们只需要实时监控他的值就可以了</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- multiple  多选 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&#x27;occupation&#x27;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span>请选择职业...<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>教师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>软件工程师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>律师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- textarea 是 一个双标签   不需要绑定value 属性的  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&#x27;desc&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 默认会让当前的 value 值为 2 和 3 的下拉框选中</span></span></span><br><span class="line"><span class="javascript">                 <span class="attr">occupation</span>: [<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>],</span></span><br><span class="line"><span class="javascript">              <span class="attr">desc</span>: <span class="string">&#x27;nihao&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="表单修饰符"><a href="#表单修饰符" class="headerlink" title="表单修饰符"></a>表单修饰符</h2><ul><li><p>.number  转换为数值</p><ul><li>注意点：    </li><li>当开始输入非数字的字符串时，因为Vue无法将字符串转换成数值</li><li>所以属性值将实时更新成相同的字符串。即使后面输入数字，也将被视作字符串。</li></ul></li><li><p>.trim  自动过滤用户输入的首尾空白字符</p><ul><li>只能去掉首尾的 不能去除中间的空格</li></ul></li><li><p>.lazy   将input事件切换成change事件</p><ul><li>.lazy 修饰符延迟了同步更新属性值的时机。即将原本绑定在 input 事件的同步逻辑转变为绑定在 change 事件上</li><li>在失去焦点 或者 按下回车键时才更新</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自动将用户的输入值转为数值类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--自动过滤用户输入的首尾空白字符   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在“change”时而非“input”时更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;msg&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><ul><li>内置指令不能满足我们特殊的需求</li><li>Vue允许我们自定义指令</li></ul><h4 id="Vue-directive-注册全局指令"><a href="#Vue-directive-注册全局指令" class="headerlink" title="Vue.directive  注册全局指令"></a>Vue.directive  注册全局指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">  使用自定义的指令，只需在对用的元素中，加上&#x27;v-&#x27;的前缀形成类似于内部指令&#x27;v-if&#x27;，&#x27;v-text&#x27;的形式。 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 注意点： </span></span></span><br><span class="line"><span class="javascript"><span class="comment">//   1、 在自定义指令中  如果以驼峰命名的方式定义 如  Vue.directive(&#x27;focusA&#x27;,function()&#123;&#125;) </span></span></span><br><span class="line"><span class="javascript"><span class="comment">//   2、 在HTML中使用的时候 只能通过 v-focus-a 来使用 </span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"><span class="comment">// 注册一个全局自定义指令 v-focus</span></span></span><br><span class="line"><span class="javascript">Vue.directive(<span class="string">&#x27;focus&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 当绑定元素插入到 DOM 中。 其中 el为dom元素</span></span></span><br><span class="line"><span class="javascript">  <span class="attr">inserted</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 聚焦元素</span></span></span><br><span class="line"><span class="javascript">    el.focus();</span></span><br><span class="line"><span class="javascript"> &#125;</span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">　　<span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue-directive-注册全局指令-带参数"><a href="#Vue-directive-注册全局指令-带参数" class="headerlink" title="Vue.directive  注册全局指令 带参数"></a>Vue.directive  注册全局指令 带参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-color</span>=<span class="string">&#x27;msg&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     自定义指令-带参数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     bind - 只调用一次，在指令第一次绑定到元素上时候调用</span></span></span><br><span class="line"><span class="comment"><span class="javascript"></span></span></span><br><span class="line"><span class="comment"><span class="javascript">   */</span></span></span><br><span class="line"><span class="javascript">   Vue.directive(<span class="string">&#x27;color&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">     <span class="comment">// bind声明周期, 只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// el 为当前自定义指令的DOM元素  </span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// binding 为自定义的函数形参   通过自定义属性传递过来的值 存在 binding.value 里面</span></span></span><br><span class="line"><span class="javascript">     <span class="attr">bind</span>: <span class="function"><span class="keyword">function</span>(<span class="params">el, binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="comment">// 根据指令的参数设置背景色</span></span></span><br><span class="line"><span class="javascript">       <span class="comment">// console.log(binding.value.color)</span></span></span><br><span class="line"><span class="javascript">       el.style.backgroundColor = binding.value.color;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">msg</span>: &#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">color</span>: <span class="string">&#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义指令局部指令"><a href="#自定义指令局部指令" class="headerlink" title="自定义指令局部指令"></a>自定义指令局部指令</h3><ul><li>局部指令，需要定义在  directives 的选项   用法和全局用法一样 </li><li>局部指令只能在当前组件里面使用</li><li>当全局指令和局部指令同名时以局部指令为准</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-color</span>=<span class="string">&#x27;msg&#x27;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">      自定义指令-局部指令</span></span></span><br><span class="line"><span class="comment"><span class="javascript">    */</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">msg</span>: &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="comment">//局部指令，需要定义在  directives 的选项</span></span></span><br><span class="line"><span class="javascript">      <span class="attr">directives</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">color</span>: &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">bind</span>: <span class="function"><span class="keyword">function</span>(<span class="params">el, binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            el.style.backgroundColor = binding.value.color;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">focus</span>: &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">inserted</span>: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            el.focus();</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性-computed"><a href="#计算属性-computed" class="headerlink" title="计算属性   computed"></a>计算属性   computed</h2><ul><li>模板中放入太多的逻辑会让模板过重且难以维护  使用计算属性可以让模板更加的简洁</li><li><strong>计算属性是基于它们的响应式依赖进行缓存的</strong></li><li>computed比较适合对多个变量或者对象进行处理后返回一个结果值，也就是数多个变量中的某一个值发生了变化则我们监控的这个值也就会发生变化</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">       当多次调用 reverseString  的时候 </span></span><br><span class="line"><span class="comment">       只要里面的 num 值不改变 他会把第一次计算的结果直接返回</span></span><br><span class="line"><span class="comment">直到data 中的num值改变 计算属性才会重新发生计算</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;reverseString&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;reverseString&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 调用methods中的方法的时候  他每次会重新调用 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;reverseMessage()&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;reverseMessage()&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     计算属性与方法的区别:计算属性是基于依赖进行缓存的，而方法不缓存</span></span></span><br><span class="line"><span class="comment"><span class="javascript">   */</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">msg</span>: <span class="string">&#x27;Nihao&#x27;</span>,</span></span><br><span class="line"><span class="javascript">       <span class="attr">num</span>: <span class="number">100</span></span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">reverseMessage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(<span class="string">&#x27;methods&#x27;</span>)</span></span><br><span class="line"><span class="javascript">         <span class="keyword">return</span> <span class="built_in">this</span>.msg.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="comment">//computed  属性 定义 和 data 已经 methods 平级 </span></span></span><br><span class="line"><span class="javascript">     <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//  reverseString   这个是我们自己定义的名字 </span></span></span><br><span class="line"><span class="javascript">       <span class="attr">reverseString</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(<span class="string">&#x27;computed&#x27;</span>)</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> total = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//  当data 中的 num 的值改变的时候  reverseString  会自动发生计算  </span></span></span><br><span class="line"><span class="javascript">         <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="built_in">this</span>.num;i++)&#123;</span></span><br><span class="line"><span class="javascript">           total += i;</span></span><br><span class="line"><span class="javascript">         &#125;</span></span><br><span class="line"><span class="javascript">         <span class="comment">// 这里一定要有return 否则 调用 reverseString 的 时候无法拿到结果    </span></span></span><br><span class="line"><span class="javascript">         <span class="keyword">return</span> total;</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="侦听器-watch"><a href="#侦听器-watch" class="headerlink" title="侦听器   watch"></a>侦听器   watch</h2><ul><li>使用watch来响应数据的变化</li><li>一般用于异步或者开销较大的操作</li><li>watch 中的属性 一定是data 中 已经存在的数据 </li><li><strong>当需要监听一个对象的改变时，普通的watch方法无法监听到对象内部属性的改变，只有data中的数据才能够监听到变化，此时就需要deep属性对对象进行深度监听</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;firstName&#x27;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;lastName&#x27;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">       <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">             侦听器</span></span></span><br><span class="line"><span class="comment"><span class="javascript">           */</span></span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">           <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">           <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">               <span class="attr">firstName</span>: <span class="string">&#x27;Jim&#x27;</span>,</span></span><br><span class="line"><span class="javascript">               <span class="attr">lastName</span>: <span class="string">&#x27;Green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">               <span class="comment">// fullName: &#x27;Jim Green&#x27;</span></span></span><br><span class="line"><span class="javascript">           &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="comment">//watch  属性 定义 和 data 已经 methods 平级 </span></span></span><br><span class="line"><span class="javascript">           <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="javascript">               <span class="comment">//   注意：  这里firstName  对应着data 中的 firstName </span></span></span><br><span class="line"><span class="javascript">               <span class="comment">//   当 firstName 值 改变的时候  会自动触发 watch</span></span></span><br><span class="line"><span class="javascript">               <span class="attr">firstName</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">this</span>.fullName = val + <span class="string">&#x27; &#x27;</span> + <span class="built_in">this</span>.lastName;</span></span><br><span class="line"><span class="javascript">               &#125;,</span></span><br><span class="line"><span class="javascript">               <span class="comment">//   注意：  这里 lastName 对应着data 中的 lastName </span></span></span><br><span class="line"><span class="javascript">               <span class="attr">lastName</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">this</span>.fullName = <span class="built_in">this</span>.firstName + <span class="string">&#x27; &#x27;</span> + val;</span></span><br><span class="line"><span class="javascript">               &#125;</span></span><br><span class="line"><span class="javascript">           &#125;</span></span><br><span class="line"><span class="javascript">       &#125;);</span></span><br><span class="line"><span class="javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><ul><li>Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。</li><li>过滤器可以用在两个地方：双花括号插值和v-bind表达式。</li><li>过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示</li><li>支持级联操作</li><li>过滤器不改变真正的<code>data</code>，而只是改变渲染的结果，并返回过滤后的版本</li><li>全局注册时是filter，没有s的。而局部过滤器是filters，是有s的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;msg&#x27;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- upper 被定义为接收单个参数的过滤器函数，表达式  msg  的值将作为参数传入到函数中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg | upper&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">      支持级联操作</span></span><br><span class="line"><span class="comment">      upper  被定义为接收单个参数的过滤器函数，表达式msg 的值将作为参数传入到函数中。</span></span><br><span class="line"><span class="comment">  然后继续调用同样被定义为接收单个参数的过滤器 lower ，将upper 的结果传递到lower中</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg | upper | lower&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:abc</span>=<span class="string">&#x27;msg | upper&#x27;</span>&gt;</span>测试数据<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   <span class="comment">//  lower  为全局过滤器     </span></span></span><br><span class="line"><span class="javascript">   Vue.filter(<span class="string">&#x27;lower&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> val.charAt(<span class="number">0</span>).toLowerCase() + val.slice(<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">msg</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">       <span class="comment">//filters  属性 定义 和 data 已经 methods 平级 </span></span></span><br><span class="line"><span class="javascript">       <span class="comment">//  定义filters 中的过滤器为局部过滤器 </span></span></span><br><span class="line"><span class="javascript">      <span class="attr">filters</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//   upper  自定义的过滤器名字 </span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//    upper 被定义为接收单个参数的过滤器函数，表达式  msg  的值将作为参数传入到函数中</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">upper</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//  过滤器中一定要有返回值 这样外界使用过滤器的时候才能拿到结果</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> val.charAt(<span class="number">0</span>).toUpperCase() + val.slice(<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="过滤器中传递参数"><a href="#过滤器中传递参数" class="headerlink" title="过滤器中传递参数"></a>过滤器中传递参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">filterA 被定义为接收三个参数的过滤器函数。</span></span><br><span class="line"><span class="comment">其中 message 的值作为第一个参数，</span></span><br><span class="line"><span class="comment">普通字符串 &#x27;arg1&#x27; 作为第二个参数，表达式 arg2 的值作为第三个参数。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">      &#123;&#123; message | filterA(&#x27;arg1&#x27;, &#x27;arg2&#x27;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 在过滤器中 第一个参数 对应的是  管道符前面的数据   n  此时对应 message</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 第2个参数  a 对应 实参  arg1 字符串</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 第3个参数  b 对应 实参  arg2 字符串</span></span></span><br><span class="line"><span class="javascript">      Vue.filter(<span class="string">&#x27;filterA&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">n,a,b</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span>(n&lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> n+a;</span></span><br><span class="line"><span class="javascript">          &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> n+b;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">      </span></span><br><span class="line"><span class="javascript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">el</span>:<span class="string">&quot;#box&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">              <span class="attr">message</span>: <span class="string">&quot;哈哈哈&quot;</span></span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">      &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><ul><li>事物从出生到死亡的过程</li><li>Vue实例从创建 到销毁的过程 ，这些过程中会伴随着一些函数的自调用。我们称这些函数为钩子函数</li></ul><h3 id="常用的钩子函数"><a href="#常用的钩子函数" class="headerlink" title="常用的钩子函数"></a>常用的钩子函数</h3><table><thead><tr><th>beforeCreate</th><th>在实例初始化之后，数据观测和事件配置之前被调用 此时data 和 methods 以及页面的DOM结构都没有初始化   什么都做不了</th></tr></thead><tbody><tr><td>created</td><td>在实例创建完成后被立即调用此时data 和 methods已经可以使用  但是页面还没有渲染出来</td></tr><tr><td>beforeMount</td><td>在挂载开始之前被调用   此时页面上还看不到真实数据 只是一个模板页面而已</td></tr><tr><td>mounted</td><td>el被新创建的vm.$el替换，并挂载到实例上去之后调用该钩子。  数据已经真实渲染到页面上  在这个钩子函数里面我们可以使用一些第三方的插件</td></tr><tr><td>beforeUpdate</td><td>数据更新时调用，发生在虚拟DOM打补丁之前。   页面上数据还是旧的</td></tr><tr><td>updated</td><td>由于数据更改导致的虚拟DOM重新渲染和打补丁，在这之后会调用该钩子。 页面上数据已经替换成最新的</td></tr><tr><td>beforeDestroy</td><td>实例销毁之前调用</td></tr><tr><td>destroyed</td><td>实例销毁后调用</td></tr></tbody></table><h3 id="数组变异方法"><a href="#数组变异方法" class="headerlink" title="数组变异方法"></a>数组变异方法</h3><ul><li>在 Vue 中，直接修改对象属性的值无法触发响应式。当你直接修改了对象属性的值，你会发现，只有数据改了，但是页面内容并没有改变</li><li>变异数组方法即保持数组方法原有功能不变的前提下对其进行功能拓展</li></ul><table><thead><tr><th><code>push()</code></th><th>往数组最后面添加一个元素，成功返回当前数组的长度</th></tr></thead><tbody><tr><td><code>pop()</code></td><td>删除数组的最后一个元素，成功返回删除元素的值</td></tr><tr><td><code>shift()</code></td><td>删除数组的第一个元素，成功返回删除元素的值</td></tr><tr><td><code>unshift()</code></td><td>往数组最前面添加一个元素，成功返回当前数组的长度</td></tr><tr><td><code>splice()</code></td><td>有三个参数，第一个是想要删除的元素的下标（必选），第二个是想要删除的个数（必选），第三个是删除 后想要在原位置替换的值</td></tr><tr><td><code>sort()</code></td><td>sort()  使数组按照字符编码默认从小到大排序,成功返回排序后的数组</td></tr><tr><td><code>reverse()</code></td><td>reverse()  将数组倒序，成功返回倒序后的数组</td></tr></tbody></table><h3 id="替换数组"><a href="#替换数组" class="headerlink" title="替换数组"></a>替换数组</h3><ul><li>不会改变原始数组，但总是返回一个新数组</li></ul><table><thead><tr><th>filter</th><th>filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</th></tr></thead><tbody><tr><td>concat</td><td>concat() 方法用于连接两个或多个数组。该方法不会改变现有的数组</td></tr><tr><td>slice</td><td>slice() 方法可从已有的数组中返回选定的元素。该方法并不会修改数组，而是返回一个子数组</td></tr></tbody></table><h3 id="动态数组响应式数据"><a href="#动态数组响应式数据" class="headerlink" title="动态数组响应式数据"></a>动态数组响应式数据</h3><ul><li>Vue.set(a,b,c)    让 触发视图重新更新一遍，数据动态起来</li><li>a是要更改的数据 、   b是数据的第几项、   c是更改后的数据</li></ul><h3 id="图书列表案例"><a href="#图书列表案例" class="headerlink" title="图书列表案例"></a>图书列表案例</h3><ul><li>静态列表效果</li><li>基于数据实现模板效果</li><li>处理每行的操作按钮</li></ul><h4 id="1、-提供的静态数据"><a href="#1、-提供的静态数据" class="headerlink" title="1、 提供的静态数据"></a>1、 提供的静态数据</h4><ul><li>数据存放在vue 中 data 属性中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">     <span class="attr">data</span>: &#123;</span><br><span class="line">       <span class="attr">books</span>: [&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;三国演义&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;,&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;水浒传&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;,&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;红楼梦&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;,&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;西游记&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;]</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;); <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">     <span class="attr">data</span>: &#123;</span><br><span class="line">       <span class="attr">books</span>: [&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;三国演义&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;,&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;水浒传&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;,&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;红楼梦&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;,&#123;</span><br><span class="line">         <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">         <span class="attr">name</span>: <span class="string">&#x27;西游记&#x27;</span>,</span><br><span class="line">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;]</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><h4 id="2、-把提供好的数据渲染到页面上"><a href="#2、-把提供好的数据渲染到页面上" class="headerlink" title="2、 把提供好的数据渲染到页面上"></a>2、 把提供好的数据渲染到页面上</h4><ul><li>利用 v-for循环 遍历 books 将每一项数据渲染到对应的数据中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in books&#x27;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 对应的id 渲染到页面上 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 对应的name 渲染到页面上 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 阻止 a 标签的默认跳转 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、-添加图书"><a href="#3、-添加图书" class="headerlink" title="3、 添加图书"></a>3、 添加图书</h4><ul><li>通过双向绑定获取到输入框中的输入内容 </li><li>给按钮添加点击事件 </li><li>把输入框中的数据存储到 data 中的 books  里面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>图书管理<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;book&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">           编号：</span><br><span class="line">         <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 3.1、通过双向绑定获取到输入框中的输入的 id  --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;id&#x27;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">           名称：</span><br><span class="line">         <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 3.2、通过双向绑定获取到输入框中的输入的 name  --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;name&#x27;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 3.3、给按钮添加点击事件  --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;handle&#x27;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">      图书管理-添加图书</span></span></span><br><span class="line"><span class="comment"><span class="javascript">    */</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">books</span>: [&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>: <span class="string">&#x27;三国演义&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>: <span class="string">&#x27;水浒传&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>: <span class="string">&#x27;红楼梦&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>: <span class="string">&#x27;西游记&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;]</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 3.4 定义一个新的对象book 存储 获取到输入框中 书 的id和名字 </span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> book = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">          book.id = <span class="built_in">this</span>.id;</span></span><br><span class="line"><span class="javascript">          book.name = <span class="built_in">this</span>.name;</span></span><br><span class="line"><span class="javascript">          book.date = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">         <span class="comment">// 3.5 把book  通过数组的变异方法 push 放到    books 里面</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.books.push(book);</span></span><br><span class="line"><span class="javascript">          <span class="comment">//3.6 清空输入框</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.id = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-修改图书-上"><a href="#4-修改图书-上" class="headerlink" title="4 修改图书-上"></a>4 修改图书-上</h4><ul><li>点击修改按钮的时候 获取到要修改的书籍名单<ul><li>4.1  给修改按钮添加点击事件，  需要把当前的图书的id 传递过去 这样才知道需要修改的是哪一本书籍</li></ul></li><li>把需要修改的书籍名单填充到表单里面<ul><li>4.2  根据传递过来的id 查出books 中 对应书籍的详细信息</li><li>4.3 把获取到的信息填充到表单</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h1</span>&gt;</span>图书管理<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;book&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">             编号：</span><br><span class="line">           <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;id&#x27;</span> <span class="attr">:disabled</span>=<span class="string">&quot;flag&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">             名称：</span><br><span class="line">           <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;name&#x27;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;handle&#x27;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">tr</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in books&#x27;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!--- </span></span><br><span class="line"><span class="comment">4.1  给修改按钮添加点击事件，  需要把当前的图书的id 传递过去 </span></span><br><span class="line"><span class="comment">这样才知道需要修改的是哪一本书籍</span></span><br><span class="line"><span class="comment"> ---&gt;</span>  </span><br><span class="line">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;toEdit(item.id)&#x27;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     图书管理-添加图书</span></span></span><br><span class="line"><span class="comment"><span class="javascript">   */</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">flag</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">       <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">       <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">       <span class="attr">books</span>: [&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">id</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">name</span>: <span class="string">&#x27;三国演义&#x27;</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;,&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">id</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">name</span>: <span class="string">&#x27;水浒传&#x27;</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;,&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">id</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">name</span>: <span class="string">&#x27;红楼梦&#x27;</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;,&#123;</span></span><br><span class="line"><span class="javascript">         <span class="attr">id</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">name</span>: <span class="string">&#x27;西游记&#x27;</span>,</span></span><br><span class="line"><span class="javascript">         <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;]</span></span><br><span class="line"><span class="javascript">     &#125;,</span></span><br><span class="line"><span class="javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">       <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">// 3.4 定义一个新的对象book 存储 获取到输入框中 书 的id和名字 </span></span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> book = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">         book.id = <span class="built_in">this</span>.id;</span></span><br><span class="line"><span class="javascript">         book.name = <span class="built_in">this</span>.name;</span></span><br><span class="line"><span class="javascript">         book.date = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 3.5 把book  通过数组的变异方法 push 放到    books 里面</span></span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.books.push(book);</span></span><br><span class="line"><span class="javascript">         <span class="comment">//3.6 清空输入框</span></span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.id = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">       &#125;,</span></span><br><span class="line"><span class="javascript">       <span class="attr">toEdit</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(id)</span></span><br><span class="line"><span class="javascript">         <span class="comment">//4.2  根据传递过来的id 查出books 中 对应书籍的详细信息</span></span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> book = <span class="built_in">this</span>.books.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">return</span> item.id == id;</span></span><br><span class="line"><span class="javascript">         &#125;);</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(book)</span></span><br><span class="line"><span class="javascript">         <span class="comment">//4.3 把获取到的信息填充到表单</span></span></span><br><span class="line"><span class="javascript">         <span class="comment">// this.id   和  this.name 通过双向绑定 绑定到了表单中  一旦数据改变视图自动更新</span></span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.id = book[<span class="number">0</span>].id;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.name = book[<span class="number">0</span>].name;</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-修改图书-下"><a href="#5-修改图书-下" class="headerlink" title="5  修改图书-下"></a>5  修改图书-下</h4><ul><li>5.1  定义一个标识符， 主要是控制 编辑状态下当前编辑书籍的id 不能被修改 即 处于编辑状态下 当前控制书籍编号的输入框禁用  </li><li> 5.2  通过属性绑定给书籍编号的 绑定 disabled 的属性  flag 为 true 即为禁用</li><li> 5.3  flag 默认值为false   处于编辑状态 要把 flag 改为true 即当前表单为禁用 </li><li> 5.4  复用添加方法   用户点击提交的时候依然执行 handle 中的逻辑如果 flag为true 即 表单处于不可输入状态 此时执行的用户编辑数据数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>图书管理<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;book&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">              编号：</span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 5.2 通过属性绑定 绑定 disabled 的属性  flag 为 true 即为禁用      --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;id&#x27;</span> <span class="attr">:disabled</span>=<span class="string">&quot;flag&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">              名称：</span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;name&#x27;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;handle&#x27;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in books&#x27;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;toEdit(item.id)&#x27;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/*图书管理-添加图书*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 5.1  定义一个标识符， 主要是控制 编辑状态下当前编辑书籍的id 不能被修改 </span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 即 处于编辑状态下 当前控制书籍编号的输入框禁用 </span></span></span><br><span class="line"><span class="javascript">                <span class="attr">flag</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">              </span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">handle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">                     5.4  复用添加方法   用户点击提交的时候依然执行 handle 中的逻辑</span></span></span><br><span class="line"><span class="comment"><span class="javascript">                  如果 flag为true 即 表单处于不可输入状态 此时执行的用户编辑数据数据</span></span></span><br><span class="line"><span class="comment"><span class="javascript">                   */</span> </span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (<span class="built_in">this</span>.flag) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 编辑图书</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 5.5  根据当前的ID去更新数组中对应的数据  </span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books.some(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (item.id == <span class="built_in">this</span>.id) &#123;</span></span><br><span class="line"><span class="javascript">                                <span class="comment">// 箭头函数中 this 指向父级作用域的this </span></span></span><br><span class="line"><span class="javascript">                                item.name = <span class="built_in">this</span>.name;</span></span><br><span class="line"><span class="javascript">                                <span class="comment">// 完成更新操作之后，需要终止循环</span></span></span><br><span class="line"><span class="javascript">                                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                            &#125;</span></span><br><span class="line"><span class="javascript">                        &#125;);</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 5.6 编辑完数据后表单要处以可以输入的状态</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//  5.7  如果 flag为false  表单处于输入状态 此时执行的用户添加数据    </span></span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123; </span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> book = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">                        book.id = <span class="built_in">this</span>.id;</span></span><br><span class="line"><span class="javascript">                        book.name = <span class="built_in">this</span>.name;</span></span><br><span class="line"><span class="javascript">                        book.date = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books.push(book);</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 清空表单</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.id = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 清空表单</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.id = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">toEdit</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                     <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">                     5.3  flag 默认值为false   处于编辑状态 要把 flag 改为true 即当前表单为禁  用 </span></span></span><br><span class="line"><span class="comment"><span class="javascript">                     */</span> </span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(id)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> book = <span class="built_in">this</span>.books.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> item.id == id;</span></span><br><span class="line"><span class="javascript">                    &#125;);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(book)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.id = book[<span class="number">0</span>].id;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.name = book[<span class="number">0</span>].name;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-删除图书"><a href="#6-删除图书" class="headerlink" title="6 删除图书"></a>6 删除图书</h4><ul><li>6.1 给删除按钮添加事件 把当前需要删除的书籍id 传递过来</li><li> 6.2 根据id从数组中查找元素的索引</li><li>6.3 根据索引删除数组元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in books&#x27;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;toEdit(item.id)&#x27;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--  6.1 给删除按钮添加事件 把当前需要删除的书籍id 传递过来  --&gt;</span> </span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;deleteBook(item.id)&#x27;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">      图书管理-添加图书</span><br><span class="line">    */</span><br><span class="line">    var vm = new Vue(&#123;</span><br><span class="line">      methods: &#123;</span><br><span class="line">        deleteBook: function(id)&#123;</span><br><span class="line">          // 删除图书</span><br><span class="line">          #// 6.2 根据id从数组中查找元素的索引</span><br><span class="line">          // var index = this.books.findIndex(function(item)&#123;</span><br><span class="line">          //   return item.id == id;</span><br><span class="line">          // &#125;);</span><br><span class="line">          #// 6.3 根据索引删除数组元素</span><br><span class="line">          // this.books.splice(index, 1);</span><br><span class="line">          // -------------------------</span><br><span class="line">         #// 方法二：通过filter方法进行删除</span><br><span class="line"></span><br><span class="line">          # 6.4  根据filter 方法 过滤出来id 不是要删除书籍的id </span><br><span class="line">          # 因为 filter 是替换数组不会修改原始数据 所以需要 把 不是要删除书籍的id  赋值给 books </span><br><span class="line">          this.books = this.books.filter(function(item)&#123;</span><br><span class="line">            return item.id != id;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常用特性应用场景"><a href="#常用特性应用场景" class="headerlink" title="常用特性应用场景"></a>常用特性应用场景</h3><h4 id="1-过滤器"><a href="#1-过滤器" class="headerlink" title="1 过滤器"></a>1 过滤器</h4><ul><li>Vue.filter  定义一个全局过滤器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">tr</span> <span class="attr">:key</span>=<span class="string">&#x27;item.id&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in books&#x27;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 1.3  调用过滤器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date | format(&#x27;yyyy-MM-dd hh:mm:ss&#x27;)&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;toEdit(item.id)&#x27;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;deleteBook(item.id)&#x27;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    #1.1  Vue.filter  定义一个全局过滤器</span><br><span class="line">    Vue.filter(&#x27;format&#x27;, function(value, arg) &#123;</span><br><span class="line">              function dateFormat(date, format) &#123;</span><br><span class="line">                if (typeof date === &quot;string&quot;) &#123;</span><br><span class="line">                  var mts = date.match(/(\/Date\((\d+)\)\/)/);</span><br><span class="line">                  if (mts &amp;&amp; mts.length &gt;= 3) &#123;</span><br><span class="line">                    date = parseInt(mts[2]);</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                date = new Date(date);</span><br><span class="line">                if (!date || date.toUTCString() == &quot;Invalid Date&quot;) &#123;</span><br><span class="line">                  return &quot;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                var map = &#123;</span><br><span class="line">                  &quot;M&quot;: date.getMonth() + 1, //月份 </span><br><span class="line">                  &quot;d&quot;: date.getDate(), //日 </span><br><span class="line">                  &quot;h&quot;: date.getHours(), //小时 </span><br><span class="line">                  &quot;m&quot;: date.getMinutes(), //分 </span><br><span class="line">                  &quot;s&quot;: date.getSeconds(), //秒 </span><br><span class="line">                  &quot;q&quot;: Math.floor((date.getMonth() + 3) / 3), //季度 </span><br><span class="line">                  &quot;S&quot;: date.getMilliseconds() //毫秒 </span><br><span class="line">                &#125;;</span><br><span class="line">                format = format.replace(/([yMdhmsqS])+/g, function(all, t) &#123;</span><br><span class="line">                  var v = map[t];</span><br><span class="line">                  if (v !== undefined) &#123;</span><br><span class="line">                    if (all.length &gt; 1) &#123;</span><br><span class="line">                      v = &#x27;0&#x27; + v;</span><br><span class="line">                      v = v.substr(v.length - 2);</span><br><span class="line">                    &#125;</span><br><span class="line">                    return v;</span><br><span class="line">                  &#125; else if (t === &#x27;y&#x27;) &#123;</span><br><span class="line">                    return (date.getFullYear() + &#x27;&#x27;).substr(4 - all.length);</span><br><span class="line">                  &#125;</span><br><span class="line">                  return all;</span><br><span class="line">                &#125;);</span><br><span class="line">                return format;</span><br><span class="line">              &#125;</span><br><span class="line">              return dateFormat(value, arg);</span><br><span class="line">            &#125;)</span><br><span class="line">#1.2  提供的数据 包含一个时间戳   为毫秒数</span><br><span class="line">   [&#123;</span><br><span class="line">          id: 1,</span><br><span class="line">          name: &#x27;三国演义&#x27;,</span><br><span class="line">          date: 2525609975000</span><br><span class="line">        &#125;,&#123;</span><br><span class="line">          id: 2,</span><br><span class="line">          name: &#x27;水浒传&#x27;,</span><br><span class="line">          date: 2525609975000</span><br><span class="line">        &#125;,&#123;</span><br><span class="line">          id: 3,</span><br><span class="line">          name: &#x27;红楼梦&#x27;,</span><br><span class="line">          date: 2525609975000</span><br><span class="line">        &#125;,&#123;</span><br><span class="line">          id: 4,</span><br><span class="line">          name: &#x27;西游记&#x27;,</span><br><span class="line">          date: 2525609975000</span><br><span class="line">        &#125;];</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-自定义指令"><a href="#2-自定义指令" class="headerlink" title="2 自定义指令"></a>2 自定义指令</h4><ul><li>让表单自动获取焦点</li><li>通过Vue.directive 自定义指定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2.2  通过v-自定义属性名 调用自定义指令 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;id&#x27;</span> <span class="attr">:disabled</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    # 2.1   通过Vue.directive 自定义指定</span><br><span class="line">Vue.directive(&#x27;focus&#x27;, &#123;</span><br><span class="line">      inserted: function (el) &#123;</span><br><span class="line">        el.focus();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-计算属性"><a href="#3-计算属性" class="headerlink" title="3 计算属性"></a>3 计算属性</h4><ul><li>通过计算属性计算图书的总数<ul><li>图书的总数就是计算数组的长度 </li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>图书总数：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 3.2 在页面上 展示出来 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;total&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">      计算属性与方法的区别:计算属性是基于依赖进行缓存的，而方法不缓存</span></span></span><br><span class="line"><span class="comment"><span class="javascript">    */</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">flag</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">submitFlag</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">books</span>: []</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">total</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 3.1  计算图书的总数</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">this</span>.books.length;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;表单基本操作&quot;&gt;&lt;a href=&quot;#表单基本操作&quot; class=&quot;headerlink&quot; title=&quot;表单基本操作&quot;&gt;&lt;/a&gt;表单基本操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;获取单选框中的值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过v-model&lt;/li&gt;
&lt;/ul&gt;
&lt;f</summary>
      
    
    
    
    
    <category term="vue" scheme="https://www.lxy.zone/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue常用指令总结</title>
    <link href="https://www.lxy.zone/2021/01/14/112_vue%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>https://www.lxy.zone/2021/01/14/112_vue%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-14T07:20:17.000Z</published>
    <updated>2022-01-21T03:59:42.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><ul><li>本质就是自定义属性</li><li>Vue中指定都是以 v- 开头 </li></ul><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><ul><li>防止页面加载时出现闪烁问题</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="css">    1、通过属性选择器 选择到 带有属性 v-cloak的标签  让他隐藏</span></span></span><br><span class="line"><span class="comment"><span class="css"> */</span></span></span><br><span class="line"><span class="css">  <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 元素隐藏    */</span></span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2、 让带有插值 语法的   添加 v-cloak 属性 </span></span><br><span class="line"><span class="comment">         在 数据渲染完场之后，v-cloak 属性会被自动去除，</span></span><br><span class="line"><span class="comment">         v-cloak一旦移除也就是没有这个属性了  属性选择器就选择不到该标签</span></span><br><span class="line"><span class="comment"> 也就是对应的标签会变为可见</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>  <span class="attr">v-cloak</span>  &gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//  el   指定元素 id 是 app 的元素  </span></span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="comment">//  data  里面存储的是数据</span></span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">msg</span>: <span class="string">&#x27;Hello Vue&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><ul><li>v-text指令用于将数据填充到标签中，作用于插值表达式类似，但是没有闪动问题</li><li>如果数据中有HTML标签会将html标签一并输出</li><li>注意：此处为单向绑定，数据对象上的值改变，插值会发生变化；但是当插值发生变化并不会影响数据对象的值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">注意:在指令中不要写插值语法  直接写对应的变量名称 </span></span><br><span class="line"><span class="comment">        在 v-text 中 赋值的时候不要在写 插值语法</span></span><br><span class="line"><span class="comment">一般属性中不加 &#123;&#123;&#125;&#125;  直接写 对应 的数据名 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Vue  中只有在标签的 内容中 才用插值语法 --&gt;</span></span><br><span class="line">        &#123;&#123;msg&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">msg</span>: <span class="string">&#x27;Hello Vue.js&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><ul><li><p>用法和v-text 相似  但是他可以将HTML片段填充到标签中</p></li><li><p>可能有安全问题, 一般只在可信任内容上使用 <code>v-html</code>，<strong>永不</strong>用在用户提交的内容上</p></li><li><p>它与v-text区别在于v-text输出的是纯文本，浏览器不会对其再进行html解析，但v-html会将其当html标签解析后输出。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;html&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!-- 输出：html标签在渲染的时候被解析 --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!-- 输出：&lt;span&gt;通过双括号绑定&lt;/span&gt; --&gt;</span></span><br><span class="line">    </span><br><span class="line">　　<span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!-- 输出：&lt;span&gt;html标签在渲染的时候被源码输出&lt;/span&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">　　<span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">　　<span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">　　<span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">　　　　<span class="attr">message</span>: <span class="string">&quot;&lt;span&gt;通过双括号绑定&lt;/span&gt;&quot;</span>,</span></span><br><span class="line"><span class="javascript">　　　　<span class="attr">html</span>: <span class="string">&quot;&lt;span&gt;html标签在渲染的时候被解析&lt;/span&gt;&quot;</span>,</span></span><br><span class="line"><span class="javascript">　　　　<span class="attr">text</span>: <span class="string">&quot;&lt;span&gt;html标签在渲染的时候被源码输出&lt;/span&gt;&quot;</span>,</span></span><br><span class="line"><span class="javascript">　　&#125;</span></span><br><span class="line"><span class="javascript"> &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><ul><li>显示原始信息跳过编译过程</li><li>跳过这个元素和它的子元素的编译过程。</li><li><strong>一些静态的内容不需要编译加这个指令可以加快渲染</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123; this will not be compiled &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>    </span><br><span class="line"><span class="comment">&lt;!--  显示的是&#123;&#123; this will not be compiled &#125;&#125;  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">     <span class="comment">&lt;!--   即使data里面定义了msg这里仍然是显示的&#123;&#123;msg&#125;&#125;  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">msg</span>: <span class="string">&#x27;Hello Vue.js&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a><strong>v-once</strong></h3><ul><li>执行一次性的插值【当数据改变时，插值处的内容不会继续更新】</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- 即使data里面定义了msg 后期我们修改了 仍然显示的是第一次data里面存储的数据即 Hello Vue.js  --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123; msg&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">msg</span>: <span class="string">&#x27;Hello Vue.js&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h3><ul><li>当数据发生变化的时候，视图也就发生变化</li><li>当视图发生变化的时候，数据也会跟着同步变化</li></ul><h4 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h4><ul><li><strong>v-model</strong>是一个指令，限制在 <code>&lt;input&gt;、&lt;select&gt;、&lt;textarea&gt;、components</code>中使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">         当输入框中内容改变的时候，  页面上的msg  会自动更新</span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;msg&#x27;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mvvm"><a href="#mvvm" class="headerlink" title="mvvm"></a>mvvm</h3><ul><li>MVC 是后端的分层开发概念； MVVM是前端视图层的概念，主要关注于 视图层分离，也就是说：MVVM把前端的视图层，分为了 三部分 Model, View , VM ViewModel</li><li>m   model  <ul><li>数据层   Vue  中 数据层 都放在 data 里面</li></ul></li><li>v   view     视图   <ul><li>Vue  中  view      即 我们的HTML页面  </li></ul></li><li>vm   （view-model）     控制器     将数据和视图层建立联系      <ul><li>vm 即  Vue 的实例  就是 vm  </li></ul></li></ul><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><ul><li>用来绑定事件的</li><li> 形式如：v-on:click  缩写为 @click;</li></ul><p><img src="https://halo-1257208482.image.myqcloud.com/image_1610608011444.png!webp" alt="image.png"></p><h3 id="v-on事件函数中传入参数"><a href="#v-on事件函数中传入参数" class="headerlink" title="v-on事件函数中传入参数"></a>v-on事件函数中传入参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 如果事件直接绑定函数名称，那么默认会传递事件对象作为事件函数的第一个参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&#x27;handle1&#x27;</span>&gt;</span>点击1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 2、如果事件绑定函数调用，那么事件对象必须作为最后一个参数显示传递，</span></span><br><span class="line"><span class="comment">                 并且事件对象的名称必须是$event </span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&#x27;handle2(123, 456, $event)&#x27;</span>&gt;</span>点击2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">num</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">handle1</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(event.target.innerHTML)</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">handle2</span>: <span class="function"><span class="keyword">function</span>(<span class="params">p, p1, event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(p, p1)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(event.target.innerHTML)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.num++;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><ul><li>在事件处理程序中调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是非常常见的需求。</li><li>Vue 不推荐我们操作DOM    为了解决这个问题，Vue.js 为 <code>v-on</code> 提供了<strong>事件修饰符</strong></li><li>修饰符是由点开头的指令后缀来表示的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 修饰符可以串联   即阻止冒泡也阻止默认事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop.prevent</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.self</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。</span><br></pre></td></tr></table></figure><h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3><ul><li>在做项目中有时会用到键盘事件，在监听键盘事件时，我们经常需要检查详细的按键。Vue 允许为 <code>v-on</code> 在监听键盘事件时添加按键修饰符</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只有在 `keyCode` 是 13 时调用 `vm.submit()` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.13</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- -当点击enter 时调用 `vm.submit()` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--当点击enter或者space时  时调用 `vm.alertMe()`   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keyup.enter.space</span>=<span class="string">&quot;alertMe&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">常用的按键修饰符</span><br><span class="line">.enter =&gt;    enter键</span><br><span class="line">.tab =&gt; tab键</span><br><span class="line">.delete (捕获“删除”和“退格”按键) =&gt;  删除键</span><br><span class="line">.esc =&gt; 取消键</span><br><span class="line">.space =&gt;  空格键</span><br><span class="line">.up =&gt;  上</span><br><span class="line">.down =&gt;  下</span><br><span class="line">.left =&gt;  左</span><br><span class="line">.right =&gt;  右</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="attr">submit</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,</span></span><br><span class="line"><span class="javascript">              <span class="attr">alertMe</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义按键修饰符别名"><a href="#自定义按键修饰符别名" class="headerlink" title="自定义按键修饰符别名"></a>自定义按键修饰符别名</h3><ul><li>在Vue中可以通过<code>config.keyCodes</code>自定义按键修饰符别名</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    预先定义了keycode 116（即F5）的别名为f5，因此在文字输入框中按下F5，会触发prompt方法</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keydown.f5</span>=<span class="string">&quot;prompt()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.config.keyCodes.f5 = <span class="number">116</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">prompt</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;我是 F5！&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><ul><li>v-bind 指令被用来响应地更新 HTML 属性</li><li>v-bind:href    可以缩写为    :href;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 绑定一个属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imageSrc&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imageSrc&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="绑定对象"><a href="#绑定对象" class="headerlink" title="绑定对象"></a>绑定对象</h4><ul><li>我们可以给v-bind:class 一个对象，以动态地切换class。</li><li>注意：v-bind:class指令可以与普通的class特性共存</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">1、 v-bind 中支持绑定一个对象 </span><br><span class="line">如果绑定的是一个对象 则 键为 对应的类名  值 为对应data中的数据 </span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">HTML最终渲染为 &lt;ul class=&quot;box textColor textSize&quot;&gt;&lt;/ul&gt;</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">textColor，textSize  对应的渲染到页面上的CSS类名</span></span><br><span class="line"><span class="comment">isColor，isSize  对应vue data中的数据  如果为true 则对应的类名 渲染到页面上 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当 isColor 和 isSize 变化时，class列表将相应的更新，</span></span><br><span class="line"><span class="comment">例如，将isSize改成false，</span></span><br><span class="line"><span class="comment">class列表将变为 &lt;ul class=&quot;box textColor&quot;&gt;&lt;/ul&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;textColor:isColor, textSize:isSize&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习Vue<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习Node<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习React<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;&#123;color:activeColor,fontSize:activeSize&#125;&quot;</span>&gt;</span>对象语法<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">sript</span>&gt;</span></span><br><span class="line">var vm= new Vue(&#123;</span><br><span class="line">    el:&#x27;.box&#x27;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        isColor:true,</span><br><span class="line">        isSize:true，</span><br><span class="line">    activeColor:&quot;red&quot;,</span><br><span class="line">        activeSize:&quot;25px&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">sript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>:<span class="number">1px</span> dashed <span class="number">#f0f</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.textColor</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>:<span class="number">#f00</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>:<span class="number">#eef</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.textSize</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-weight</span>:bold;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="绑定class"><a href="#绑定class" class="headerlink" title="绑定class"></a>绑定class</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">2、  v-bind 中支持绑定一个数组    数组中classA和 classB 对应为data中的数据</span><br><span class="line"></span><br><span class="line">这里的classA  对用data 中的  classA</span><br><span class="line">这里的classB  对用data 中的  classB</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[classA, classB]&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习Vue<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习Node<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习React<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> vm= <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>:<span class="string">&#x27;.box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">classA</span>:‘textColor‘,</span></span><br><span class="line"><span class="javascript">        <span class="attr">classB</span>:‘textSize‘</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>:<span class="number">1px</span> dashed <span class="number">#f0f</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.textColor</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>:<span class="number">#f00</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>:<span class="number">#eef</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.textSize</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-weight</span>:bold;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="绑定对象和绑定数组-的区别"><a href="#绑定对象和绑定数组-的区别" class="headerlink" title="绑定对象和绑定数组 的区别"></a>绑定对象和绑定数组 的区别</h4><ul><li>绑定对象的时候 对象的属性 即要渲染的类名 对象的属性值对应的是 data 中的数据 </li><li>绑定数组的时候数组里面存的是data 中的数据 </li></ul><h4 id="绑定style"><a href="#绑定style" class="headerlink" title="绑定style"></a>绑定style</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;styleObject&quot;</span>&gt;</span>绑定样式对象<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#x27;</span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- CSS 属性名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来)    --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;&#123; color: activeColor, fontSize: fontSize,background:&#x27;red&#x27; &#125;&quot;</span>&gt;</span>内联样式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--组语法可以将多个样式对象应用到同一个元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;[styleObj1, styleObj2]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">styleObject</span>: &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">color</span>: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">fontSize</span>: <span class="string">&#x27;30px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">background</span>:<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;，</span></span><br><span class="line"><span class="javascript">        <span class="attr">activeColor</span>: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">   <span class="attr">fontSize</span>: <span class="string">&quot;30px&quot;</span></span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">styleObj1</span>: &#123;</span></span><br><span class="line"><span class="javascript">             <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;,</span></span><br><span class="line"><span class="javascript">       <span class="attr">styleObj2</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">fontSize</span>: <span class="string">&#x27;30px&#x27;</span></span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><h4 id="v-if-使用场景"><a href="#v-if-使用场景" class="headerlink" title="v-if 使用场景"></a>v-if 使用场景</h4><ul><li>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素</li><li>2- 进行两个视图之间的切换</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  判断是否加载，如果为真，就加载，否则不加载--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span></span><br><span class="line">           如果flag为true则显示,false不显示!</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">flag</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class="line">       A</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- v-else-if紧跟在v-if或v-else-if之后   表示v-if条件不成立时执行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class="line">       B</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class="line">       C</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- v-else紧跟在v-if或v-else-if之后--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">       Not A/B/C</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">type</span>: <span class="string">&#x27;C&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-show-和-v-if的区别"><a href="#v-show-和-v-if的区别" class="headerlink" title="v-show 和 v-if的区别"></a>v-show 和 v-if的区别</h4><ul><li>v-show本质就是标签display设置为none，控制隐藏<ul><li>v-show只编译一次，后面其实就是控制css，而v-if不停的销毁和创建，故v-show性能更好一点。</li></ul></li><li>v-if是动态的向DOM树内添加或者删除DOM元素<ul><li>v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件</li></ul></li></ul><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h4><ul><li>用于循环的数组里面的值可以是对象，也可以是普通元素  </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 循环结构-遍历数组  </span></span><br><span class="line"><span class="comment">item 是我们自己定义的一个名字  代表数组里面的每一项  </span></span><br><span class="line"><span class="comment">items对应的是 data中的数组--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"> <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">items</span>: [</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span></span><br><span class="line"><span class="javascript">    ]，</span></span><br><span class="line"><span class="javascript">   </span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>不推荐</strong>同时使用 <code>v-if</code> 和 <code>v-for</code></li><li>当 <code>v-if</code> 与 <code>v-for</code> 一起使用时，<code>v-for</code> 具有比 <code>v-if</code> 更高的优先级。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">&lt;!--  循环结构-遍历对象</span></span><br><span class="line"><span class="comment">v 代表   对象的value</span></span><br><span class="line"><span class="comment">k  代表对象的 键 </span></span><br><span class="line"><span class="comment">i  代表索引</span></span><br><span class="line"><span class="comment">---&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&#x27;v==13&#x27;</span> <span class="attr">v-for</span>=<span class="string">&#x27;(v,k,i) in obj&#x27;</span>&gt;</span>&#123;&#123;v + &#x27;---&#x27; + k + &#x27;---&#x27; + i&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"> <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">items</span>: [</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span></span><br><span class="line"><span class="javascript">    ]，</span></span><br><span class="line"><span class="javascript">    <span class="attr">obj</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">uname</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">age</span>: <span class="number">13</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">gender</span>: <span class="string">&#x27;female&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>key 的作用<ul><li><strong>key来给每个节点做一个唯一标识</strong></li><li><strong>key的作用主要是为了高效的更新虚拟DOM</strong></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;指令&quot;&gt;&lt;a href=&quot;#指令&quot; class=&quot;headerlink&quot; title=&quot;指令&quot;&gt;&lt;/a&gt;指令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本质就是自定义属性&lt;/li&gt;
&lt;li&gt;Vue中指定都是以 v- 开头 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;v-cloak&quot;&gt;</summary>
      
    
    
    
    
    <category term="vue" scheme="https://www.lxy.zone/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>spring整合shiro后@Value加载变慢导致变量值为null</title>
    <link href="https://www.lxy.zone/2021/01/12/111_spring%E6%95%B4%E5%90%88shiro%E5%90%8E@Value%E5%8A%A0%E8%BD%BD%E5%8F%98%E6%85%A2%E5%AF%BC%E8%87%B4%E5%8F%98%E9%87%8F%E5%80%BC%E4%B8%BAnull/"/>
    <id>https://www.lxy.zone/2021/01/12/111_spring%E6%95%B4%E5%90%88shiro%E5%90%8E@Value%E5%8A%A0%E8%BD%BD%E5%8F%98%E6%85%A2%E5%AF%BC%E8%87%B4%E5%8F%98%E9%87%8F%E5%80%BC%E4%B8%BAnull/</id>
    <published>2021-01-12T13:51:55.000Z</published>
    <updated>2022-01-21T05:14:51.118Z</updated>
    
    <content type="html"><![CDATA[<p>具体情况如下：<br><code>Caused by: java.lang.ClassNotFoundException: $&#123;jdbc.driverClass&#125;</code><br>而通过Controller中调用可以正常打印，由此可知是@Value加载的太慢了。</p><p>经过百度了好久，终于找到原因，由于Spring 和Shiro整合时，生命周期有某种冲突，需在spirng配置类中修改以下代码即可。<strong>（程序使用纯java配置无xml）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不加static,@Value加载properties文件太慢导致为null</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PropertySourcesPlaceholderConfigurer <span class="title">propertySourcesPlaceholderConfigurer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> PropertySourcesPlaceholderConfigurer();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// shiro 生命周期函数，不加static,@Value加载properties文件太慢导致为null</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LifecycleBeanPostProcessor <span class="title">lifecycleBeanPostProcessor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> LifecycleBeanPostProcessor();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>Spring完整配置类如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(value = &quot;zone.lxy&quot;, excludeFilters = @ComponentScan.Filter(Controller.class))</span> <span class="comment">//除了controller注解其他都扫</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:jdbc.properties&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span> <span class="comment">// 开启事务控制</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;zone.lxy.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.driverClass&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driverClass;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.jdbcUrl&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String jdbcUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.user&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据源</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DriverManagerDataSource dataSource = <span class="keyword">new</span> DriverManagerDataSource();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource.setDriverClassName(driverClass);</span><br><span class="line"><span class="comment">//            dataSource.setDriverClassName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line">            dataSource.setUrl(jdbcUrl);</span><br><span class="line"><span class="comment">//            dataSource.setUrl(&quot;jdbc:mysql://localhost:3306/emp?characterEncoding=utf8&amp;useSSL=false&quot;);</span></span><br><span class="line">            dataSource.setUsername(user);</span><br><span class="line"><span class="comment">//            dataSource.setUsername(&quot;root&quot;);</span></span><br><span class="line">            dataSource.setPassword(password);</span><br><span class="line"><span class="comment">//            dataSource.setPassword(&quot;123456&quot;);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务管理器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PlatformTransactionManager <span class="title">transactionManager</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置mybatis-plus的bean工厂</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MybatisSqlSessionFactoryBean <span class="title">sqlSessionFactoryBean</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        MybatisSqlSessionFactoryBean sqlSessionFactoryBean = <span class="keyword">new</span> MybatisSqlSessionFactoryBean();</span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dataSource);</span><br><span class="line">        <span class="comment">// mybatis-plus分页插件</span></span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">        paginationInterceptor.setCountSqlParser(<span class="keyword">new</span> JsqlParserCountOptimize(<span class="keyword">true</span>));</span><br><span class="line">        sqlSessionFactoryBean.setPlugins(paginationInterceptor);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// shiro filter工厂</span></span><br><span class="line">    <span class="meta">@Bean(&quot;shiroFilter&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;/css/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/js/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/img/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/register&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/code&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/logout&quot;</span>, <span class="string">&quot;logout&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(map);</span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// shiro web安全管理器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">securityManager</span><span class="params">(CustomerRealm customerRealm)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        defaultWebSecurityManager.setRealm(customerRealm);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不加static,@Value加载properties文件太慢导致为null</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PropertySourcesPlaceholderConfigurer <span class="title">propertySourcesPlaceholderConfigurer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PropertySourcesPlaceholderConfigurer();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// shiro 生命周期函数，不加static,@Value加载properties文件太慢导致为null</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LifecycleBeanPostProcessor <span class="title">lifecycleBeanPostProcessor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LifecycleBeanPostProcessor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开启shiro注解</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@DependsOn(&quot;lifecycleBeanPostProcessor&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultAdvisorAutoProxyCreator <span class="title">defaultAdvisorAutoProxyCreator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DefaultAdvisorAutoProxyCreator();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthorizationAttributeSourceAdvisor <span class="title">authorizationAttributeSourceAdvisor</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        AuthorizationAttributeSourceAdvisor advisor = <span class="keyword">new</span> AuthorizationAttributeSourceAdvisor();</span><br><span class="line">        advisor.setSecurityManager(securityManager);</span><br><span class="line">        <span class="keyword">return</span> advisor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;具体情况如下：&lt;br&gt;&lt;code&gt;Caused by: java.lang.ClassNotFoundException: $&amp;#123;jdbc.driverClass&amp;#125;&lt;/code&gt;&lt;br&gt;而通过Controller中调用可以正常打印，由此可知是@Value加</summary>
      
    
    
    
    
    <category term="shiro" scheme="https://www.lxy.zone/tags/shiro/"/>
    
    <category term="spring" scheme="https://www.lxy.zone/tags/spring/"/>
    
  </entry>
  
</feed>
